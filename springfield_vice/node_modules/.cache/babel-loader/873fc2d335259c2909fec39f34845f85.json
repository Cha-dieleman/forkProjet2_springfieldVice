{"ast":null,"code":"var _jsxFileName = \"/Users/oliv/Documents/GIT_PROJET03/lyon-0919-react-p2-springfield-vice/springfield_vice/src/pages/Game.js\";\nimport React, { Component } from \"react\";\nimport Homer from \"../components/Homer\";\nimport ObstacleF from \"../components/ObstacleF\";\nimport config from \"../components/configSpringfieldVice.json\";\nimport JoyWrapper from \"../components/Joystick\";\nimport Timer from \"../components/Timer\";\nimport Donut from \"../components/Item\";\nimport DonutCounter from \"../components/DonutCounter\";\nimport BoutonA from \"../components/BoutonA\";\nimport \"./game.css\";\nimport Modal from \"../components/Modal\";\nimport { getRandomArbitrary } from \"../components/helpers\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.testLimitsOfMap = () => {\n      if (this.state.positionY < config.limits.topLimit) this.setState({\n        positionY: config.limits.topLimit\n      });else if (this.state.positionY > config.limits.bottomLimit) this.setState({\n        positionY: config.limits.bottomLimit\n      });else if (this.state.positionX > config.limits.rightLimit) this.setState({\n        positionX: config.limits.rightLimit\n      });else if (this.state.positionX < config.limits.leftLimit) this.setState({\n        positionX: config.limits.leftLimit\n      });\n    };\n\n    this.setStep = (stepX, stepY) => {\n      this.stepX = stepX;\n      this.stepY = stepY;\n    };\n\n    this.move = () => {\n      const _this$state = this.state,\n            positionX = _this$state.positionX,\n            positionY = _this$state.positionY,\n            positionDonutX = _this$state.positionDonutX,\n            positionObstacleX = _this$state.positionObstacleX;\n      this.setState({\n        positionX: positionX + this.stepX,\n        positionY: positionY + this.stepY,\n        moving: true\n      });\n      console.log(this.stepX, this.stepY);\n\n      if (this.stepX < 0) {\n        this.setState({\n          isHomerRunningLeft: true\n        });\n      } else if (this.stepX > 0) {\n        this.setState({\n          isHomerRunningLeft: false\n        });\n      } // if (this.state.isRunning)\n      // \tthis.timeOut = setTimeout(() => this.move(), 10);\n\n\n      if (this.state.isRunning === false) this.stopRunning();\n      if (positionX !== config.limits.leftLimit) this.setState({\n        positionDonutX: positionDonutX - this.stepX / config.background.defilement,\n        positionObstacleX: positionObstacleX - this.stepX / config.background.defilement\n      });\n      this.collisionDetection();\n      this.toCountDonuts();\n    };\n\n    this.startRunning = () => {\n      this.setState({\n        isRunning: true\n      });\n      this.state.intervalHomer = setInterval(() => this.move(), 50);\n    };\n\n    this.stopRunning = () => {\n      this.setState({\n        isRunning: false\n      });\n      clearInterval(this.state.intervalHomer);\n    };\n\n    this.tick = () => {\n      let seconds = this.state.seconds;\n      this.setState({\n        seconds: seconds - 1\n      });\n\n      if (seconds === 0) {\n        this.setState({\n          seconds: 0\n        });\n        alert(\"GAME OVER\");\n        clearInterval(this.interval);\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.interval = setInterval(() => this.tick(), 1000);\n    };\n\n    this.pauseTimer = () => {\n      if (this.state.paused === false) {\n        clearInterval(this.interval);\n      } else {\n        this.componentDidMount();\n      }\n    };\n\n    this.pauseGame = () => {\n      this.setState({\n        paused: !this.state.paused\n      });\n      this.pauseTimer();\n    };\n\n    this.showModal = () => {\n      this.setState({\n        showModal: true\n      });\n    };\n\n    this.hideModal = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.collisionDetection = () => {\n      if (this.state.positionX > this.state.positionDonutX - 30 && this.state.positionX < this.state.positionDonutX + 30 && this.state.positionY < this.state.positionDonutY + 30 && this.state.positionY > this.state.positionDonutY - 30) this.setState({\n        catchDonut: true\n      });\n    };\n\n    this.toCountDonuts = () => {\n      if (this.state.catchDonut) this.setState({\n        donutCount: 1\n      });\n    };\n\n    this.throwingDonut = () => {\n      this.setState({\n        throwing: !this.state.throwing\n      });\n      this.setState({\n        donutCount: 0\n      });\n      this.setState({\n        catchDonut: false\n      });\n    };\n\n    this.state = {\n      positionX: config.initialPosition.x,\n      positionY: config.initialPosition.y,\n      positionObstacleY: getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit),\n      positionObstacleX: getRandomArbitrary(config.limits.leftLimit, config.limits.rightLimit),\n      showModal: false,\n      seconds: config.timer.seconds,\n      paused: false,\n      positionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, config.limits.rightLimit)),\n      // eslint-disable-next-line\n      positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n      catchDonut: false,\n      donutCount: 0,\n      throwing: false,\n      moving: false,\n      isRunning: false,\n      isHomerRunningLeft: false\n    };\n    this.stepX = 0;\n    this.stepY = 0;\n    this.tick = this.tick.bind(this);\n    this.interval = undefined;\n  }\n\n  render() {\n    const bgStyle = {\n      backgroundPositionY: config.background.position,\n      backgroundPositionX: -this.state.positionX / config.background.defilement,\n      height: config.background.height\n    };\n    const donutStyle = this.state.catchDonut ? \"none\" : \"block\";\n    return React.createElement(\"div\", {\n      className: \"game\",\n      style: bgStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, this.testLimitsOfMap(), React.createElement(Donut, {\n      positionDonutX: this.state.positionDonutX,\n      positionDonutY: this.state.positionDonutY,\n      donutStyle: donutStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(ObstacleF, {\n      positionObstacleX: this.state.positionObstacleX,\n      positionObstacleY: this.state.positionObstacleY,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(Homer, {\n      positionX: this.state.positionX,\n      positionY: this.state.positionY,\n      isRunning: this.state.isRunning,\n      isHomerRunningLeft: this.state.isHomerRunningLeft,\n      donut: this.state.catchDonut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(DonutCounter, {\n      donutCount: this.state.donutCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(JoyWrapper, {\n      setStep: this.setStep,\n      startRunning: this.startRunning,\n      stopRunning: this.stopRunning,\n      toTheRight: this.toTheRight,\n      toTheLeft: this.toTheLeft,\n      toTheTop: this.toTheTop,\n      toTheBottom: this.toTheBottom,\n      displayJoystick: this.state.paused,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(BoutonA, {\n      throwingDonut: this.throwingDonut,\n      displayButtonA: this.state.paused,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(Timer, {\n      pauseGame: this.pauseGame,\n      showModal: this.showModal,\n      seconds: this.state.seconds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      className: \"modal\",\n      pauseGame: this.pauseGame,\n      show: this.state.showModal,\n      hideModal: this.hideModal,\n      showModal: this.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/oliv/Documents/GIT_PROJET03/lyon-0919-react-p2-springfield-vice/springfield_vice/src/pages/Game.js"],"names":["React","Component","Homer","ObstacleF","config","JoyWrapper","Timer","Donut","DonutCounter","BoutonA","Modal","getRandomArbitrary","Game","constructor","props","testLimitsOfMap","state","positionY","limits","topLimit","setState","bottomLimit","positionX","rightLimit","leftLimit","setStep","stepX","stepY","move","positionDonutX","positionObstacleX","moving","console","log","isHomerRunningLeft","isRunning","stopRunning","background","defilement","collisionDetection","toCountDonuts","startRunning","intervalHomer","setInterval","clearInterval","tick","seconds","alert","interval","componentDidMount","pauseTimer","paused","pauseGame","showModal","hideModal","positionDonutY","catchDonut","donutCount","throwingDonut","throwing","initialPosition","x","y","positionObstacleY","timer","parseInt","bind","undefined","render","bgStyle","backgroundPositionY","position","backgroundPositionX","height","donutStyle","toTheRight","toTheLeft","toTheTop","toTheBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Homer from \"../components/Homer\";\nimport ObstacleF from \"../components/ObstacleF\";\nimport config from \"../components/configSpringfieldVice.json\";\nimport JoyWrapper from \"../components/Joystick\";\nimport Timer from \"../components/Timer\";\nimport Donut from \"../components/Item\";\nimport DonutCounter from \"../components/DonutCounter\";\nimport BoutonA from \"../components/BoutonA\";\nimport \"./game.css\";\nimport Modal from \"../components/Modal\";\nimport { getRandomArbitrary } from \"../components/helpers\";\n\nclass Game extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpositionX: config.initialPosition.x,\n\t\t\tpositionY: config.initialPosition.y,\n\t\t\tpositionObstacleY: getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit),\n\t\t\tpositionObstacleX: getRandomArbitrary(config.limits.leftLimit, config.limits.rightLimit),\n\t\t\tshowModal: false,\n\t\t\tseconds: config.timer.seconds,\n\t\t\tpaused: false,\n\t\t\tpositionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, config.limits.rightLimit)),\n\t\t\t// eslint-disable-next-line\n\t\t\tpositionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n\t\t\tcatchDonut: false,\n\t\t\tdonutCount: 0,\n\t\t\tthrowing: false,\n\t\t\tmoving: false,\n\t\t\tisRunning: false,\n\t\t\tisHomerRunningLeft: false,\n\t\t};\n\t\t\n\t\tthis.stepX = 0\n\t\tthis.stepY = 0\n\t\tthis.tick = this.tick.bind(this);\n\t\tthis.interval = undefined;\n\t\t\n\t}\n\n\ttestLimitsOfMap = () => {\n\t\tif (this.state.positionY < config.limits.topLimit) this.setState({ positionY: config.limits.topLimit });\n\t\telse if (this.state.positionY > config.limits.bottomLimit)\n\t\t\tthis.setState({ positionY: config.limits.bottomLimit });\n\t\telse if (this.state.positionX > config.limits.rightLimit)\n\t\t\tthis.setState({ positionX: config.limits.rightLimit });\n\t\telse if (this.state.positionX < config.limits.leftLimit)\n\t\t\tthis.setState({ positionX: config.limits.leftLimit });\n\t};\n\n\tsetStep = (stepX, stepY) => {\n\t\tthis.stepX = stepX\n\t\tthis.stepY = stepY\n\t}\n\n\tmove = () => {\n\t\tconst { positionX, positionY, positionDonutX, positionObstacleX } = this.state;\n\n\t\tthis.setState({\n\t\t\tpositionX: positionX + this.stepX,\n\t\t\tpositionY: positionY + this.stepY,\n\t\t\tmoving: true\n\t\t});\n\t\tconsole.log(this.stepX, this.stepY)\n\t\t\n\t\tif (this.stepX < 0) {\n\t\t\tthis.setState({ isHomerRunningLeft: true })\n\t\t} else if (this.stepX > 0) {\n\t\t\tthis.setState({ isHomerRunningLeft: false })\n\t\t}\n\t\t// if (this.state.isRunning)\n\t\t// \tthis.timeOut = setTimeout(() => this.move(), 10);\n\t\n\t\tif (this.state.isRunning === false)\n\t\t\tthis.stopRunning();\n\t\t\n\t\tif (positionX !== config.limits.leftLimit)\n\t\t\tthis.setState({\n\t\t\t\tpositionDonutX: positionDonutX - this.stepX / config.background.defilement,\n\t\t\t\tpositionObstacleX: positionObstacleX - this.stepX / config.background.defilement\n\t\t\t});\n\n\t\tthis.collisionDetection();\n\t\tthis.toCountDonuts();\n\t\t\n\t};\n\n\tstartRunning = () => {\n\t\tthis.setState({ isRunning: true });\n\t\tthis.state.intervalHomer = setInterval(() => this.move(), 50);\n\t}\n\tstopRunning = () => {\n\t\tthis.setState({ isRunning: false });\n\t\tclearInterval(this.state.intervalHomer);\n\t}\n\n\n\ttick = () => {\n\t\tlet { seconds } = this.state;\n\t\tthis.setState({ seconds: seconds - 1 });\n\n\t\tif (seconds === 0) {\n\t\t\tthis.setState({ seconds: 0 });\n\t\t\talert(\"GAME OVER\");\n\t\t\tclearInterval(this.interval);\n\t\t}\n\t};\n\n\tcomponentDidMount = () => {\n\t\tthis.interval = setInterval(() => this.tick(), 1000);\n\t};\n\n\tpauseTimer = () => {\n\t\tif (this.state.paused === false) {\n\t\t\tclearInterval(this.interval); \n\t\t} else {\n\t\t\tthis.componentDidMount();\n\t\t}\n\t};\n\n\tpauseGame = () => {\n\t\tthis.setState({ paused: !this.state.paused });\n\t\tthis.pauseTimer();\n\t};\n\n\tshowModal = () => {\n\t\tthis.setState({ showModal: true });\n\t};\n\n\thideModal = () => {\n\t\tthis.setState({ showModal: false });\n\t};\n\n\tcollisionDetection = () => {\n\t\tif (\n\t\t\tthis.state.positionX > this.state.positionDonutX - 30 &&\n\t\t\tthis.state.positionX < this.state.positionDonutX + 30 &&\n\t\t\tthis.state.positionY < this.state.positionDonutY + 30 &&\n\t\t\tthis.state.positionY > this.state.positionDonutY - 30\n\t\t)\n\t\t\tthis.setState({ catchDonut: true });\n\t};\n\ttoCountDonuts = () => {\n\t\tif (this.state.catchDonut) this.setState({ donutCount: 1 });\n\t};\n\tthrowingDonut = () => {\n\t\tthis.setState({ throwing: !this.state.throwing });\n\t\tthis.setState({ donutCount: 0 });\n\t\tthis.setState({ catchDonut: false });\n\t};\n\n\trender() {\n\t\tconst bgStyle = {\n\t\t\tbackgroundPositionY: config.background.position,\n\t\t\tbackgroundPositionX: -this.state.positionX / config.background.defilement,\n\t\t\theight: config.background.height\n\t\t};\n\n\t\tconst donutStyle = this.state.catchDonut ? \"none\" : \"block\";\n\n\t\treturn (\n\t\t\t<div className=\"game\" style={bgStyle}>\n\t\t\t\t{this.testLimitsOfMap()}\n\n\t\t\t\t<Donut\n\t\t\t\t\tpositionDonutX={this.state.positionDonutX}\n\t\t\t\t\tpositionDonutY={this.state.positionDonutY}\n\t\t\t\t\tdonutStyle={donutStyle}\n\t\t\t\t/>\n\n\t\t\t\t<ObstacleF\n\t\t\t\t\tpositionObstacleX={this.state.positionObstacleX}\n\t\t\t\t\tpositionObstacleY={this.state.positionObstacleY}\n\t\t\t\t/>\n\t\t\t\t<Homer\n\t\t\t\t\tpositionX={this.state.positionX}\n\t\t\t\t\tpositionY={this.state.positionY}\n\t\t\t\t\tisRunning={this.state.isRunning}\n\t\t\t\t\tisHomerRunningLeft={this.state.isHomerRunningLeft}\n\t\t\t\t\tdonut={this.state.catchDonut}/>\n\n\t\t\t\t<DonutCounter donutCount={this.state.donutCount} />\n\t\t\t\t<JoyWrapper\n\t\t\t\t\tsetStep={this.setStep}\n\t\t\t\t\tstartRunning={this.startRunning}\n\t\t\t\t\tstopRunning={this.stopRunning}\n\t\t\t\t\ttoTheRight={this.toTheRight}\n\t\t\t\t\ttoTheLeft={this.toTheLeft}\n\t\t\t\t\ttoTheTop={this.toTheTop}\n\t\t\t\t\ttoTheBottom={this.toTheBottom}\n\t\t\t\t\tdisplayJoystick={this.state.paused}\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<BoutonA\n\t\t\t\t\tthrowingDonut={this.throwingDonut}\n\t\t\t\t\tdisplayButtonA={this.state.paused}\n\t\t\t\t/>\n\n\t\t\t\t<Timer pauseGame={this.pauseGame} showModal={this.showModal} seconds={this.state.seconds} />\n\t\t\t\t<Modal\n\t\t\t\t\tclassName=\"modal\"\n\t\t\t\t\tpauseGame={this.pauseGame}\n\t\t\t\t\tshow={this.state.showModal}\n\t\t\t\t\thideModal={this.hideModal}\n\t\t\t\t\tshowModal={this.showModal}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}