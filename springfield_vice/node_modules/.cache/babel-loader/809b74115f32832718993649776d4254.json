{"ast":null,"code":"var _jsxFileName = \"/Users/oliv/Documents/GIT_PROJET03/lyon-0919-react-p2-springfield-vice/springfield_vice/src/components/Joystick.js\";\nimport React from \"react\";\nimport Joystick from \"react-joystick\";\nimport config from \"./configSpringfieldVice.json\"; // Options à garder en entier le temps des tests.\n\nconst joystickOptions = {\n  zone: document.getElementById(\"test\"),\n  // Où mettre l'élément\n  //  color: '#fff',                        // Couleur du js (blanc par défaut)\n  //  size: 100,                            // Taille du js (100 par défaut)\n  threshold: 0.5,\n  // Force nécessaire (entre 0 et 1)\n  //  fadeTime: 250,                        // Temps d'apparition (250 s. par défaut)\n  //  multitouch: true,                     // Pas en mode 'static' ou 'semi' : a voir\n  //  maxNumberOfNipples: 2,                // En MT, le nombre maxi d'instances\n  dataOnly: false,\n  // Que les données en sortie (et plus de joystick !)\n  position: {\n    left: config.joystick.positionX,\n    bottom: config.joystick.positionY\n  },\n  // Position en mode 'static' : {left: '10%', bottom: '10%'}\n  mode: \"static\",\n  // 'dynamic', 'static' ou 'semi'\n  restJoystick: true,\n  // Retour au centre du js quand repos\n  restOpacity: 0.7,\n  // Opacité - hors mode 'dynamic' (défaut à 0.5)\n  lockX: false,\n  // Bloqué sur l'axe horizontal (?)\n  lockY: false,\n  // Bloqué sur l'axe vertical (?)\n  //  catchDistance: 50,                    // En mode 'semi', périmètre réservé pour garder le js\n  dynamicPage: true // Mettre true si DOM dynamique (comme react)\n\n};\nconst joystickContainer = {\n  // possibiité de limiter la place du joystick\n  height: \"100%\",\n  overflow: \"hidden\"\n};\n\nclass JoyWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.managerListener = manager => {\n      manager.on(\"move\", () => {\n        // Action à l'appui long\n        this.props.move(Math.floor(manager[0].frontPosition.x) / config.joystick.vitesseX, Math.floor(manager[0].frontPosition.y) / config.joystick.vitesseY);\n      });\n      manager.on(\"end\", () => {\n        // Action au relacher\n        this.props.stopMove();\n      });\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"joystick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Joystick, {\n      options: joystickOptions,\n      containerStyle: joystickContainer,\n      managerListener: this.managerListener,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default JoyWrapper;","map":{"version":3,"sources":["/Users/oliv/Documents/GIT_PROJET03/lyon-0919-react-p2-springfield-vice/springfield_vice/src/components/Joystick.js"],"names":["React","Joystick","config","joystickOptions","zone","document","getElementById","threshold","dataOnly","position","left","joystick","positionX","bottom","positionY","mode","restJoystick","restOpacity","lockX","lockY","dynamicPage","joystickContainer","height","overflow","JoyWrapper","Component","constructor","props","managerListener","manager","on","move","Math","floor","frontPosition","x","vitesseX","y","vitesseY","stopMove","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,8BAAnB,C,CAEA;;AAEA,MAAMC,eAAe,GAAG;AACvBC,EAAAA,IAAI,EAAEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADiB;AACgB;AACvC;AACA;AACAC,EAAAA,SAAS,EAAE,GAJY;AAIP;AAChB;AACA;AACA;AACAC,EAAAA,QAAQ,EAAE,KARa;AAQN;AACjBC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,IAAI,EAAER,MAAM,CAACS,QAAP,CAAgBC,SAAxB;AAAmCC,IAAAA,MAAM,EAAEX,MAAM,CAACS,QAAP,CAAgBG;AAA3D,GATa;AAS2D;AAClFC,EAAAA,IAAI,EAAE,QAViB;AAUP;AAChBC,EAAAA,YAAY,EAAE,IAXS;AAWH;AACpBC,EAAAA,WAAW,EAAE,GAZU;AAYL;AAClBC,EAAAA,KAAK,EAAE,KAbgB;AAaT;AACdC,EAAAA,KAAK,EAAE,KAdgB;AAcT;AACd;AACAC,EAAAA,WAAW,EAAE,IAhBU,CAgBL;;AAhBK,CAAxB;AAmBA,MAAMC,iBAAiB,GAAG;AACzB;AACAC,EAAAA,MAAM,EAAE,MAFiB;AAGzBC,EAAAA,QAAQ,EAAE;AAHe,CAA1B;;AAMA,MAAMC,UAAN,SAAyBxB,KAAK,CAACyB,SAA/B,CAAyC;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAKnBC,eALmB,GAKAC,OAAD,IAAa;AAC9BA,MAAAA,OAAO,CAACC,EAAR,CAAW,MAAX,EAAmB,MAAM;AACxB;AACA,aAAKH,KAAL,CAAWI,IAAX,CACCC,IAAI,CAACC,KAAL,CAAWJ,OAAO,CAAC,CAAD,CAAP,CAAWK,aAAX,CAAyBC,CAApC,IAAyCjC,MAAM,CAACS,QAAP,CAAgByB,QAD1D,EAECJ,IAAI,CAACC,KAAL,CAAWJ,OAAO,CAAC,CAAD,CAAP,CAAWK,aAAX,CAAyBG,CAApC,IAAyCnC,MAAM,CAACS,QAAP,CAAgB2B,QAF1D;AAIA,OAND;AAOAT,MAAAA,OAAO,CAACC,EAAR,CAAW,KAAX,EAAkB,MAAM;AACvB;AACA,aAAKH,KAAL,CAAWY,QAAX;AACA,OAHD;AAIA,KAjBkB;;AAElB,SAAKC,KAAL,GAAa,EAAb;AACA;;AAgBDC,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,QAAD;AACC,MAAA,OAAO,EAAEtC,eADV;AAEC,MAAA,cAAc,EAAEkB,iBAFjB;AAGC,MAAA,eAAe,EAAE,KAAKO,eAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD;AASA;;AA9BuC;;AAiCzC,eAAeJ,UAAf","sourcesContent":["import React from \"react\";\nimport Joystick from \"react-joystick\";\nimport config from \"./configSpringfieldVice.json\";\n\n// Options à garder en entier le temps des tests.\n\nconst joystickOptions = {\n\tzone: document.getElementById(\"test\"), // Où mettre l'élément\n\t//  color: '#fff',                        // Couleur du js (blanc par défaut)\n\t//  size: 100,                            // Taille du js (100 par défaut)\n\tthreshold: 0.5, // Force nécessaire (entre 0 et 1)\n\t//  fadeTime: 250,                        // Temps d'apparition (250 s. par défaut)\n\t//  multitouch: true,                     // Pas en mode 'static' ou 'semi' : a voir\n\t//  maxNumberOfNipples: 2,                // En MT, le nombre maxi d'instances\n\tdataOnly: false, // Que les données en sortie (et plus de joystick !)\n\tposition: { left: config.joystick.positionX, bottom: config.joystick.positionY }, // Position en mode 'static' : {left: '10%', bottom: '10%'}\n\tmode: \"static\", // 'dynamic', 'static' ou 'semi'\n\trestJoystick: true, // Retour au centre du js quand repos\n\trestOpacity: 0.7, // Opacité - hors mode 'dynamic' (défaut à 0.5)\n\tlockX: false, // Bloqué sur l'axe horizontal (?)\n\tlockY: false, // Bloqué sur l'axe vertical (?)\n\t//  catchDistance: 50,                    // En mode 'semi', périmètre réservé pour garder le js\n\tdynamicPage: true // Mettre true si DOM dynamique (comme react)\n};\n\nconst joystickContainer = {\n\t// possibiité de limiter la place du joystick\n\theight: \"100%\",\n\toverflow: \"hidden\"\n};\n\nclass JoyWrapper extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\tmanagerListener = (manager) => {\n\t\tmanager.on(\"move\", () => {\n\t\t\t// Action à l'appui long\n\t\t\tthis.props.move(\n\t\t\t\tMath.floor(manager[0].frontPosition.x) / config.joystick.vitesseX,\n\t\t\t\tMath.floor(manager[0].frontPosition.y) / config.joystick.vitesseY\n\t\t\t);\n\t\t});\n\t\tmanager.on(\"end\", () => {\n\t\t\t// Action au relacher\n\t\t\tthis.props.stopMove();\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"joystick\">\n\t\t\t\t<Joystick\n\t\t\t\t\toptions={joystickOptions}\n\t\t\t\t\tcontainerStyle={joystickContainer}\n\t\t\t\t\tmanagerListener={this.managerListener}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default JoyWrapper;\n"]},"metadata":{},"sourceType":"module"}