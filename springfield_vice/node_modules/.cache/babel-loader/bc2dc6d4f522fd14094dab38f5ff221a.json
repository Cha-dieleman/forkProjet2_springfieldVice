{"ast":null,"code":"var _jsxFileName = \"/Users/oliv/Documents/GIT_PROJET03/lyon-0919-react-p2-springfield-vice/springfield_vice/src/pages/Game.js\";\nimport React, { Component } from \"react\";\nimport Homer from \"../components/Homer\"; //import ObstacleF from \"../components/ObstacleF\";\n\nimport config from \"../components/configSpringfieldVice.json\";\nimport JoyWrapper from \"../components/Joystick\";\nimport Timer from \"../components/Timer\";\nimport Donut from \"../components/Item\";\nimport DonutCounter from \"../components/DonutCounter\";\nimport BoutonA from \"../components/BoutonA\";\nimport \"./game.css\";\nimport Modal from \"../components/Modal\";\nimport { getRandomArbitrary } from \"../components/helpers\";\nimport Obstacle from \"../components/Obstacle\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.testLimitsOfMap = () => {\n      if (this.state.positionY < config.limits.topLimit) this.setState({\n        positionY: config.limits.topLimit\n      });else if (this.state.positionY > config.limits.bottomLimit) this.setState({\n        positionY: config.limits.bottomLimit\n      });else if (this.state.positionX > config.limits.rightLimit) this.setState({\n        positionX: config.limits.rightLimit\n      });else if (this.state.positionX < config.limits.leftLimit) this.setState({\n        positionX: config.limits.leftLimit\n      });\n    };\n\n    this.setStep = (stepX, stepY) => {\n      this.stepX = stepX;\n      this.stepY = stepY;\n    };\n\n    this.move = () => {\n      const _this$state = this.state,\n            positionX = _this$state.positionX,\n            positionY = _this$state.positionY;\n\n      if (!this.state.blocked) {\n        this.setState({\n          positionX: positionX + this.stepX,\n          positionY: positionY + this.stepY,\n          moving: true\n        });\n      } else {\n        this.setState({\n          moving: false,\n          positionX: this.state.positionX - 5,\n          positionY: positionY + this.stepY\n        });\n      }\n\n      if (this.stepX < 0) {\n        this.setState({\n          isHomerRunningLeft: true\n        });\n      } else if (this.stepX > 0) {\n        this.setState({\n          isHomerRunningLeft: false\n        });\n      } // if (this.state.isRunning)\n      // \tthis.timeOut = setTimeout(() => this.move(), 10);\n\n\n      if (this.state.isRunning === false) this.stopRunning();\n\n      if (positionX !== config.limits.leftLimit) {\n        this.setState({\n          donutPosition: this.state.donutPosition - this.stepX / config.background.defilement\n        });\n        this.setState({\n          obstaclePosition: this.state.obstaclePosition - this.stepX / config.background.defilement\n        });\n      }\n\n      this.setState({\n        relativePositionX: this.state.positionX - this.state.donutPosition\n      });\n    };\n\n    this.startRunning = () => {\n      this.setState({\n        isRunning: true\n      });\n      this.state.intervalHomer = setInterval(() => this.move(), 50);\n    };\n\n    this.stopRunning = () => {\n      this.setState({\n        isRunning: false\n      });\n      clearInterval(this.state.intervalHomer);\n    };\n\n    this.tick = () => {\n      let seconds = this.state.seconds;\n      this.setState({\n        seconds: seconds - 1\n      });\n\n      if (seconds === 0) {\n        this.setState({\n          seconds: 0\n        });\n        alert(\"GAME OVER\");\n        clearInterval(this.interval);\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.interval = setInterval(() => {\n        this.tick();\n      }, 1000);\n      setInterval(() => this.gameLoop(), 100);\n    };\n\n    this.pauseTimer = () => {\n      if (this.state.paused === false) {\n        clearInterval(this.interval);\n      } else {\n        this.componentDidMount();\n      }\n    };\n\n    this.pauseGame = () => {\n      this.setState({\n        paused: !this.state.paused\n      });\n      this.pauseTimer();\n    };\n\n    this.showModal = () => {\n      this.setState({\n        showModal: true\n      });\n    };\n\n    this.hideModal = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.collisionDetection = item => {\n      if (this.state.relativePositionX > item.positionDonutX - 30 && this.state.relativePositionX < item.positionDonutX + 30 && this.state.positionY < item.positionDonutY + 30 && this.state.positionY > item.positionDonutY - 30) item.picked = true;\n    };\n\n    this.collisionDetectionObstacle = item => {\n      if (this.state.relativePositionX > item.positionObstacleX - 30 && this.state.relativePositionX < item.positionObstacleX + 30 && this.state.positionY < item.positionObstacleY + 30 && this.state.positionY > item.positionObstacleY - 30) {\n        this.setState({\n          //isRunning: false,\n          blocked: true\n        });\n      }\n    };\n\n    this.donutCount = () => {\n      let donutCount = 0;\n      this.state.donutPopped.map(item => item.picked ? donutCount = donutCount + 1 : donutCount = donutCount); //console.log(\"donutCount = \", donutCount);\n\n      return donutCount;\n    };\n\n    this.gameLoop = () => {\n      this.state.donutPopped.map(item => this.collisionDetection(item));\n      this.state.obstaclePopped.map(item => {\n        this.collisionDetectionObstacle(item);\n      });\n      this.testLimitsOfMap();\n    };\n\n    this.state = {\n      positionX: config.initialPosition.x,\n      positionY: config.initialPosition.y,\n      //positionObstacleY: getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit),\n      //positionObstacleX: getRandomArbitrary(config.limits.leftLimit, config.limits.rightLimit),\n      showModal: false,\n      seconds: config.timer.seconds,\n      paused: false,\n      donutPosition: 0,\n      obstaclePosition: 0,\n      positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n      catchDonut: false,\n      donutCount: 0,\n      moving: false,\n      blocked: false,\n      donutPopped: [{\n        positionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n        positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        picked: false\n      }, {\n        positionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n        positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        picked: false\n      }, {\n        positionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n        positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        picked: false\n      }, {\n        positionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n        positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        picked: false\n      }],\n      obstaclePopped: [{\n        positionObstacleX: parseInt(getRandomArbitrary(config.limits.leftLimit + 100, 1000)),\n        positionObstacleY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        picked: false\n      }, {\n        positionObstacleX: parseInt(getRandomArbitrary(1000, 3000)),\n        positionObstacleY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        picked: false\n      }],\n      relativePositionX: config.initialPosition.x,\n      isRunning: false,\n      isHomerRunningLeft: false\n    };\n    this.stepX = 0;\n    this.stepY = 0;\n    this.tick = this.tick.bind(this);\n    this.interval = undefined;\n  }\n\n  render() {\n    const bgStyle = {\n      backgroundPositionY: config.background.position,\n      backgroundPositionX: -this.state.positionX / config.background.defilement,\n      height: config.background.height\n    };\n    return React.createElement(\"div\", {\n      className: \"game\",\n      style: bgStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(Donut, {\n      donutPopped: this.state.donutPopped,\n      donutPosition: this.state.donutPosition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), React.createElement(Obstacle, {\n      obstaclePopped: this.state.obstaclePopped,\n      obstaclePosition: this.state.obstaclePosition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(Homer, {\n      positionX: this.state.positionX,\n      positionY: this.state.positionY,\n      isRunning: this.state.isRunning,\n      isHomerRunningLeft: this.state.isHomerRunningLeft,\n      donut: this.state.catchDonut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }), React.createElement(DonutCounter, {\n      donutCount: this.donutCount(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(JoyWrapper, {\n      setStep: this.setStep,\n      startRunning: this.startRunning,\n      stopRunning: this.stopRunning,\n      toTheRight: this.toTheRight,\n      toTheLeft: this.toTheLeft,\n      toTheTop: this.toTheTop,\n      toTheBottom: this.toTheBottom,\n      displayJoystick: this.state.paused,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(BoutonA, {\n      throwingDonut: this.throwingDonut,\n      displayButtonA: this.state.paused,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(Timer, {\n      pauseGame: this.pauseGame,\n      showModal: this.showModal,\n      seconds: this.state.seconds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      className: \"modal\",\n      pauseGame: this.pauseGame,\n      show: this.state.showModal,\n      hideModal: this.hideModal,\n      showModal: this.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/oliv/Documents/GIT_PROJET03/lyon-0919-react-p2-springfield-vice/springfield_vice/src/pages/Game.js"],"names":["React","Component","Homer","config","JoyWrapper","Timer","Donut","DonutCounter","BoutonA","Modal","getRandomArbitrary","Obstacle","Game","constructor","props","testLimitsOfMap","state","positionY","limits","topLimit","setState","bottomLimit","positionX","rightLimit","leftLimit","setStep","stepX","stepY","move","blocked","moving","isHomerRunningLeft","isRunning","stopRunning","donutPosition","background","defilement","obstaclePosition","relativePositionX","startRunning","intervalHomer","setInterval","clearInterval","tick","seconds","alert","interval","componentDidMount","gameLoop","pauseTimer","paused","pauseGame","showModal","hideModal","collisionDetection","item","positionDonutX","positionDonutY","picked","collisionDetectionObstacle","positionObstacleX","positionObstacleY","donutCount","donutPopped","map","obstaclePopped","initialPosition","x","y","timer","parseInt","catchDonut","bind","undefined","render","bgStyle","backgroundPositionY","position","backgroundPositionX","height","toTheRight","toTheLeft","toTheTop","toTheBottom","throwingDonut"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Homer from \"../components/Homer\";\n//import ObstacleF from \"../components/ObstacleF\";\nimport config from \"../components/configSpringfieldVice.json\";\nimport JoyWrapper from \"../components/Joystick\";\nimport Timer from \"../components/Timer\";\nimport Donut from \"../components/Item\";\nimport DonutCounter from \"../components/DonutCounter\";\nimport BoutonA from \"../components/BoutonA\";\nimport \"./game.css\";\nimport Modal from \"../components/Modal\";\nimport { getRandomArbitrary } from \"../components/helpers\";\nimport Obstacle from \"../components/Obstacle\";\n\nclass Game extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpositionX: config.initialPosition.x,\n\t\t\tpositionY: config.initialPosition.y,\n\t\t\t//positionObstacleY: getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit),\n\t\t\t//positionObstacleX: getRandomArbitrary(config.limits.leftLimit, config.limits.rightLimit),\n\t\t\tshowModal: false,\n\t\t\tseconds: config.timer.seconds,\n\t\t\tpaused: false,\n\t\t\tdonutPosition: 0,\n\t\t\tobstaclePosition: 0,\n\t\t\tpositionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n\t\t\tcatchDonut: false,\n\t\t\tdonutCount: 0,\n\t\t\tmoving: false,\n\t\t\tblocked: false,\n\t\t\tdonutPopped: [\n\t\t\t\t{\n\t\t\t\t\tpositionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n\t\t\t\t\tpositionDonutY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tpicked: false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n\t\t\t\t\tpositionDonutY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tpicked: false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n\t\t\t\t\tpositionDonutY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tpicked: false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n\t\t\t\t\tpositionDonutY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tpicked: false\n\t\t\t\t}\n\t\t\t],\n\t\t\tobstaclePopped: [\n\t\t\t\t{\n\t\t\t\t\tpositionObstacleX: parseInt(getRandomArbitrary(config.limits.leftLimit + 100, 1000)),\n\t\t\t\t\tpositionObstacleY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tpicked: false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionObstacleX: parseInt(getRandomArbitrary(1000, 3000)),\n\t\t\t\t\tpositionObstacleY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tpicked: false\n\t\t\t\t}\n\t\t\t],\n\t\t\trelativePositionX: config.initialPosition.x,\n\t\t\tisRunning: false,\n\t\t\tisHomerRunningLeft: false\n\t\t};\n\n\t\tthis.stepX = 0;\n\t\tthis.stepY = 0;\n\t\tthis.tick = this.tick.bind(this);\n\t\tthis.interval = undefined;\n\t}\n\n\ttestLimitsOfMap = () => {\n\t\tif (this.state.positionY < config.limits.topLimit) this.setState({ positionY: config.limits.topLimit });\n\t\telse if (this.state.positionY > config.limits.bottomLimit)\n\t\t\tthis.setState({ positionY: config.limits.bottomLimit });\n\t\telse if (this.state.positionX > config.limits.rightLimit)\n\t\t\tthis.setState({ positionX: config.limits.rightLimit });\n\t\telse if (this.state.positionX < config.limits.leftLimit)\n\t\t\tthis.setState({ positionX: config.limits.leftLimit });\n\t};\n\n\tsetStep = (stepX, stepY) => {\n\t\tthis.stepX = stepX;\n\t\tthis.stepY = stepY;\n\t};\n\n\tmove = () => {\n\t\tconst { positionX, positionY } = this.state;\n\t\tif (!this.state.blocked) {\n\t\t\tthis.setState({\n\t\t\t\tpositionX: positionX + this.stepX,\n\t\t\t\tpositionY: positionY + this.stepY,\n\t\t\t\tmoving: true\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tmoving: false,\n\t\t\t\tpositionX: this.state.positionX - 5,\n\t\t\t\tpositionY: positionY + this.stepY\n\t\t\t});\n\t\t}\n\n\t\tif (this.stepX < 0) {\n\t\t\tthis.setState({ isHomerRunningLeft: true });\n\t\t} else if (this.stepX > 0) {\n\t\t\tthis.setState({ isHomerRunningLeft: false });\n\t\t}\n\t\t// if (this.state.isRunning)\n\t\t// \tthis.timeOut = setTimeout(() => this.move(), 10);\n\n\t\tif (this.state.isRunning === false) this.stopRunning();\n\n\t\tif (positionX !== config.limits.leftLimit) {\n\t\t\tthis.setState({ donutPosition: this.state.donutPosition - this.stepX / config.background.defilement });\n\t\t\tthis.setState({\n\t\t\t\tobstaclePosition: this.state.obstaclePosition - this.stepX / config.background.defilement\n\t\t\t});\n\t\t}\n\t\tthis.setState({ relativePositionX: this.state.positionX - this.state.donutPosition });\n\t};\n\n\tstartRunning = () => {\n\t\tthis.setState({ isRunning: true });\n\t\tthis.state.intervalHomer = setInterval(() => this.move(), 50);\n\t};\n\tstopRunning = () => {\n\t\tthis.setState({ isRunning: false });\n\t\tclearInterval(this.state.intervalHomer);\n\t};\n\n\ttick = () => {\n\t\tlet { seconds } = this.state;\n\t\tthis.setState({ seconds: seconds - 1 });\n\n\t\tif (seconds === 0) {\n\t\t\tthis.setState({ seconds: 0 });\n\t\t\talert(\"GAME OVER\");\n\t\t\tclearInterval(this.interval);\n\t\t}\n\t};\n\n\tcomponentDidMount = () => {\n\t\tthis.interval = setInterval(() => {\n\t\t\tthis.tick();\n\t\t}, 1000);\n\t\tsetInterval(() => this.gameLoop(), 100);\n\t};\n\n\tpauseTimer = () => {\n\t\tif (this.state.paused === false) {\n\t\t\tclearInterval(this.interval);\n\t\t} else {\n\t\t\tthis.componentDidMount();\n\t\t}\n\t};\n\n\tpauseGame = () => {\n\t\tthis.setState({ paused: !this.state.paused });\n\t\tthis.pauseTimer();\n\t};\n\n\tshowModal = () => {\n\t\tthis.setState({ showModal: true });\n\t};\n\n\thideModal = () => {\n\t\tthis.setState({ showModal: false });\n\t};\n\n\tcollisionDetection = (item) => {\n\t\tif (\n\t\t\tthis.state.relativePositionX > item.positionDonutX - 30 &&\n\t\t\tthis.state.relativePositionX < item.positionDonutX + 30 &&\n\t\t\tthis.state.positionY < item.positionDonutY + 30 &&\n\t\t\tthis.state.positionY > item.positionDonutY - 30\n\t\t)\n\t\t\titem.picked = true;\n\t};\n\n\tcollisionDetectionObstacle = (item) => {\n\t\tif (\n\t\t\tthis.state.relativePositionX > item.positionObstacleX - 30 &&\n\t\t\tthis.state.relativePositionX < item.positionObstacleX + 30 &&\n\t\t\tthis.state.positionY < item.positionObstacleY + 30 &&\n\t\t\tthis.state.positionY > item.positionObstacleY - 30\n\t\t) {\n\t\t\tthis.setState({\n\t\t\t\t//isRunning: false,\n\t\t\t\tblocked: true\n\t\t\t});\n\t\t}\n\t};\n\n\tdonutCount = () => {\n\t\tlet donutCount = 0;\n\t\tthis.state.donutPopped.map((item) =>\n\t\t\titem.picked ? (donutCount = donutCount + 1) : (donutCount = donutCount)\n\t\t);\n\t\t//console.log(\"donutCount = \", donutCount);\n\t\treturn donutCount;\n\t};\n\n\tgameLoop = () => {\n\t\tthis.state.donutPopped.map((item) => this.collisionDetection(item));\n\t\tthis.state.obstaclePopped.map((item) => {\n\t\t\tthis.collisionDetectionObstacle(item);\n\t\t});\n\n\t\tthis.testLimitsOfMap();\n\t};\n\n\trender() {\n\t\tconst bgStyle = {\n\t\t\tbackgroundPositionY: config.background.position,\n\t\t\tbackgroundPositionX: -this.state.positionX / config.background.defilement,\n\t\t\theight: config.background.height\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"game\" style={bgStyle}>\n\t\t\t\t<Donut donutPopped={this.state.donutPopped} donutPosition={this.state.donutPosition} />\n\t\t\t\t<Obstacle\n\t\t\t\t\tobstaclePopped={this.state.obstaclePopped}\n\t\t\t\t\tobstaclePosition={this.state.obstaclePosition}\n\t\t\t\t/>\n\t\t\t\t<Homer\n\t\t\t\t\tpositionX={this.state.positionX}\n\t\t\t\t\tpositionY={this.state.positionY}\n\t\t\t\t\tisRunning={this.state.isRunning}\n\t\t\t\t\tisHomerRunningLeft={this.state.isHomerRunningLeft}\n\t\t\t\t\tdonut={this.state.catchDonut}\n\t\t\t\t/>\n\t\t\t\t<DonutCounter donutCount={this.donutCount()} />\n\t\t\t\t<JoyWrapper\n\t\t\t\t\tsetStep={this.setStep}\n\t\t\t\t\tstartRunning={this.startRunning}\n\t\t\t\t\tstopRunning={this.stopRunning}\n\t\t\t\t\ttoTheRight={this.toTheRight}\n\t\t\t\t\ttoTheLeft={this.toTheLeft}\n\t\t\t\t\ttoTheTop={this.toTheTop}\n\t\t\t\t\ttoTheBottom={this.toTheBottom}\n\t\t\t\t\tdisplayJoystick={this.state.paused}\n\t\t\t\t/>\n\t\t\t\t<BoutonA throwingDonut={this.throwingDonut} displayButtonA={this.state.paused} />\n\t\t\t\t<Timer pauseGame={this.pauseGame} showModal={this.showModal} seconds={this.state.seconds} />\n\t\t\t\t<Modal\n\t\t\t\t\tclassName=\"modal\"\n\t\t\t\t\tpauseGame={this.pauseGame}\n\t\t\t\t\tshow={this.state.showModal}\n\t\t\t\t\thideModal={this.hideModal}\n\t\t\t\t\tshowModal={this.showModal}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}