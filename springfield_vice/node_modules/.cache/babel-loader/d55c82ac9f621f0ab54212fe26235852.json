{"ast":null,"code":"export const RandomTab = tab_ => {\n  var i;\n  var Num;\n  var Nbr = tab_.length;\n  var Tab = tab_;\n\n  while (Nbr > 0) {\n    Num = Math.floor(Math.random() * Nbr);\n    Nbr--;\n    var szTmp = Tab[Num];\n\n    for (i = Num; i < Nbr; i++) Tab[i] = Tab[i + 1];\n\n    Tab[Nbr] = szTmp;\n  }\n\n  Tab.reverse();\n  return Tab;\n};\nexport const randomof = unit => Math.floor(Math.random() * unit);\nexport const getRandomArbitrary = (min, max) => Math.random() * (max - min) + min;","map":{"version":3,"sources":["/Users/oliv/Documents/GIT_PROJET03/lyon-0919-react-p2-springfield-vice/springfield_vice/src/components/helpers.js"],"names":["RandomTab","tab_","i","Num","Nbr","length","Tab","Math","floor","random","szTmp","reverse","randomof","unit","getRandomArbitrary","min","max"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAIC,IAAD,IAAU;AAClC,MAAIC,CAAJ;AACA,MAAIC,GAAJ;AACA,MAAIC,GAAG,GAAGH,IAAI,CAACI,MAAf;AACA,MAAIC,GAAG,GAAGL,IAAV;;AAEA,SAAOG,GAAG,GAAG,CAAb,EAAgB;AACfD,IAAAA,GAAG,GAAGI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,GAA3B,CAAN;AACAA,IAAAA,GAAG;AACH,QAAIM,KAAK,GAAGJ,GAAG,CAACH,GAAD,CAAf;;AACA,SAAKD,CAAC,GAAGC,GAAT,EAAcD,CAAC,GAAGE,GAAlB,EAAuBF,CAAC,EAAxB,EAA4BI,GAAG,CAACJ,CAAD,CAAH,GAASI,GAAG,CAACJ,CAAC,GAAG,CAAL,CAAZ;;AAC5BI,IAAAA,GAAG,CAACF,GAAD,CAAH,GAAWM,KAAX;AACA;;AACDJ,EAAAA,GAAG,CAACK,OAAJ;AACA,SAAOL,GAAP;AACA,CAfM;AAiBP,OAAO,MAAMM,QAAQ,GAAIC,IAAD,IAAUN,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBI,IAA3B,CAA3B;AAEP,OAAO,MAAMC,kBAAkB,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAcT,IAAI,CAACE,MAAL,MAAiBO,GAAG,GAAGD,GAAvB,IAA8BA,GAAvE","sourcesContent":["export const RandomTab = (tab_) => {\n\tvar i;\n\tvar Num;\n\tvar Nbr = tab_.length;\n\tvar Tab = tab_;\n\n\twhile (Nbr > 0) {\n\t\tNum = Math.floor(Math.random() * Nbr);\n\t\tNbr--;\n\t\tvar szTmp = Tab[Num];\n\t\tfor (i = Num; i < Nbr; i++) Tab[i] = Tab[i + 1];\n\t\tTab[Nbr] = szTmp;\n\t}\n\tTab.reverse();\n\treturn Tab;\n};\n\nexport const randomof = (unit) => Math.floor(Math.random() * unit);\n\nexport const getRandomArbitrary = (min, max) => Math.random() * (max - min) + min;\n"]},"metadata":{},"sourceType":"module"}