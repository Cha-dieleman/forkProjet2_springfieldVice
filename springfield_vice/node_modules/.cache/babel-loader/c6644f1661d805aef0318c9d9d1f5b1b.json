{"ast":null,"code":"var _jsxFileName = \"/Users/oliv/Documents/GIT_PROJET03/lyon-0919-react-p2-springfield-vice/springfield_vice/src/components/Modal.js\";\n\n/* eslint-disable no-lone-blocks */\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport config from \"../components/configSpringfieldVice.json\";\nimport { createPortal } from \"react-dom\";\nimport \"./modal.css\";\nconst modalStyle = {\n  display: \"flex\",\n  position: \"fixed\",\n  left: 0,\n  top: 0,\n  bottom: 0,\n  right: 0,\n  backgroundColor: \"rgba(0,0,0,.5)\",\n  color: \"#FFF\",\n  fontSize: \"20px\"\n};\nexport default class Modal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleMusic = () => {\n      this.setState({\n        music: !this.state.music\n      });\n\n      if (this.state.music) {// couper la musique...\n      } else {// remettre la musique...\n        }\n    };\n\n    this.toggleSounds = () => {\n      this.setState({\n        sounds: !this.state.sounds\n      });\n\n      if (this.state.sounds) {// couper les sons...\n      } else {// remettre les sons...\n        }\n    };\n\n    this.state = {\n      music: config.modal.music,\n      sounds: config.modal.sounds\n    };\n  }\n\n  showHeader() {\n    const other_buttons = React.createElement(React.Fragment, null, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"SCORES\"), React.createElement(\"button\", {\n      onClick: () => this.toggleSounds(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"SOUNDS \", !this.state.sounds ? 'ON' : 'OFF'), React.createElement(\"button\", {\n      onClick: () => this.toggleMusic(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"MUSIC \", !this.state.music ? 'ON' : 'OFF'));\n    const content = [];\n\n    switch (this.props.origin) {\n      case \"start\":\n        {\n          content.header = \"Settings\";\n        }\n        ;\n        {\n          content.quote = \"Trying is the first step towards failure.\";\n        }\n        ;\n        content.buttons = React.createElement(React.Fragment, null, other_buttons, React.createElement(Link, {\n          to: \"/game\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"PLAY\")), React.createElement(\"button\", {\n          id: \"close\",\n          onClick: () => this.props.close(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"X\"));\n        break;\n\n      case \"go_win\":\n        // FIN DE PARTIE + GAGNANT\n        content.header = \"GOOD JOB !\";\n        content.quote = \"Stupid risks make life worth living.\";\n        content.buttons = React.createElement(React.Fragment, null, React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"SCORES\"), React.createElement(Link, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"RESTART\")));\n        {\n          this.props.hide(true);\n        }\n        break;\n\n      case \"go_lost\":\n        // FIN DE PARTIE + PERDANT\n        content.header = \"GAME OVER\";\n        content.quote = \"Kids, you tried your best, and you failed miserably. The lesson is: never try.\";\n        content.buttons = React.createElement(React.Fragment, null, React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"SCORES\"), React.createElement(Link, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"RESTART\")));\n        {\n          this.props.hide(true);\n        }\n        break;\n\n      default:\n        content.header = \"PAUSE\";\n        content.quote = \"Do you need a break or are you giving up?\";\n        content.buttons = React.createElement(React.Fragment, null, React.createElement(Link, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"RESTART\")), other_buttons, React.createElement(Link, {\n          to: {\n            pathname: \"/game\",\n            search: \"\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: () => this.props.resume(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \"RESUME\"), React.createElement(\"button\", {\n          id: \"close\",\n          onClick: () => this.props.resume(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"X\")));\n        {\n          this.props.hide();\n        }\n    }\n\n    return content;\n  }\n\n  render() {\n    return createPortal(React.createElement(\"div\", {\n      style: modalStyle,\n      className: \"modal\",\n      onClick: this.props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, this.showHeader().header)), React.createElement(\"div\", {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.showHeader().quote)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.showHeader().buttons))), document.getElementById(\"modal_root\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/oliv/Documents/GIT_PROJET03/lyon-0919-react-p2-springfield-vice/springfield_vice/src/components/Modal.js"],"names":["React","Component","Link","config","createPortal","modalStyle","display","position","left","top","bottom","right","backgroundColor","color","fontSize","Modal","constructor","props","toggleMusic","setState","music","state","toggleSounds","sounds","modal","showHeader","other_buttons","content","origin","header","quote","buttons","close","hide","pathname","search","resume","render","onClick","document","getElementById"],"mappings":"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","sourcesContent":["/* eslint-disable no-lone-blocks */\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom'\nimport config from \"../components/configSpringfieldVice.json\";\nimport { createPortal } from \"react-dom\";\nimport \"./modal.css\";\n\nconst modalStyle = {\n  display: \"flex\",\n  position: \"fixed\",\n  left: 0,\n  top: 0,\n  bottom: 0,\n  right: 0,\n  backgroundColor: \"rgba(0,0,0,.5)\",\n  color: \"#FFF\",\n  fontSize: \"20px\"\n};\n\nexport default class Modal extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      music: config.modal.music,\n      sounds: config.modal.sounds,\n    };\n  };\n\n  showHeader() {\n    const other_buttons = \n      <>\n        <button>SCORES</button>\n        <button onClick={() => this.toggleSounds()}>SOUNDS {!this.state.sounds ? 'ON' :  'OFF'}</button>\n        <button onClick={() => this.toggleMusic()}>MUSIC {!this.state.music ? 'ON' :  'OFF'}</button>\n      </>;\n    const content = [];\n    switch (this.props.origin) {\n      case \"start\":\n        {content.header = \"Settings\"};\n        {content.quote = \"Trying is the first step towards failure.\"};\n        content.buttons = \n          <>\n            {other_buttons}\n            <Link to=\"/game\"><button>PLAY</button></Link>\n            <button id=\"close\" onClick={() => this.props.close()}>X</button>\n          </>;\n        break;\n      case \"go_win\": // FIN DE PARTIE + GAGNANT\n        content.header = \"GOOD JOB !\"\n        content.quote = \"Stupid risks make life worth living.\";\n        content.buttons = \n          <>\n            <button>SCORES</button>\n            <Link to=\"/\"><button>RESTART</button></Link>\n          </>;\n        {this.props.hide(true)}\n        break;\n      case \"go_lost\": // FIN DE PARTIE + PERDANT\n        content.header = \"GAME OVER\"\n        content.quote = \"Kids, you tried your best, and you failed miserably. The lesson is: never try.\";\n        content.buttons = \n          <>\n            <button>SCORES</button>\n            <Link to=\"/\"><button>RESTART</button></Link>\n          </>;\n        {this.props.hide(true)}\n        break;\n      default: \n        content.header = \"PAUSE\";\n        content.quote = \"Do you need a break or are you giving up?\";\n        content.buttons =\n          <>\n            <Link to=\"/\"><button>RESTART</button></Link>\n            {other_buttons}\n            <Link to={{ pathname: \"/game\", search: \"\" }}>\n              <button onClick={() => this.props.resume()}>RESUME</button>\n              <button id=\"close\" onClick={() => this.props.resume()}>X</button>\n            </Link>\n          </>;\n        {this.props.hide()}\n    }\n    return content;\n  }\n\n  toggleMusic = () => {\n    this.setState({music: !this.state.music});\n    if (this.state.music) {\n      // couper la musique...\n    }\n    else {\n      // remettre la musique...\n    }\n  }\n\n  toggleSounds = () => {\n    this.setState({sounds: !this.state.sounds});\n    if (this.state.sounds) {\n      // couper les sons...\n    }\n    else {\n      // remettre les sons...\n    }\n  }\n\n  render() {\n    return createPortal(\n      <div style={modalStyle} className=\"modal\" onClick={this.props.onClick}>\n        <div className=\"modal-wrapper\">\n          <div className=\"modal-header\">\n            <h3>{this.showHeader().header}</h3>\n          </div>\n          <div className=\"modal-body\">\n            <p>{this.showHeader().quote}</p>\n          </div>\n          <div>\n            {this.showHeader().buttons}\n          </div>\n        </div>\n      </div>,\n      document.getElementById(\"modal_root\"),\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}