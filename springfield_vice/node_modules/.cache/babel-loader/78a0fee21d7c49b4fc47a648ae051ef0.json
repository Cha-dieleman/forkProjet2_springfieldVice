{"ast":null,"code":"export var RandomTab=function RandomTab(tab_){var i;var Num;var Nbr=tab_.length;var Tab=tab_;while(Nbr>0){Num=Math.floor(Math.random()*Nbr);Nbr--;var szTmp=Tab[Num];for(i=Num;i<Nbr;i++){Tab[i]=Tab[i+1];}Tab[Nbr]=szTmp;}Tab.reverse();return Tab;};export var randomof=function randomof(unit){return Math.floor(Math.random()*unit);};export var getRandomArbitrary=function getRandomArbitrary(min,max){return Math.random()*(max-min)+min;};","map":{"version":3,"sources":["/Users/oliv/Documents/GIT_PROJET03/lyon-0919-react-p2-springfield-vice/springfield_vice/src/components/helpers.js"],"names":["RandomTab","tab_","i","Num","Nbr","length","Tab","Math","floor","random","szTmp","reverse","randomof","unit","getRandomArbitrary","min","max"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,IAAD,CAAU,CAClC,GAAIC,CAAAA,CAAJ,CACA,GAAIC,CAAAA,GAAJ,CACA,GAAIC,CAAAA,GAAG,CAAGH,IAAI,CAACI,MAAf,CACA,GAAIC,CAAAA,GAAG,CAAGL,IAAV,CAEA,MAAOG,GAAG,CAAG,CAAb,CAAgB,CACfD,GAAG,CAAGI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBL,GAA3B,CAAN,CACAA,GAAG,GACH,GAAIM,CAAAA,KAAK,CAAGJ,GAAG,CAACH,GAAD,CAAf,CACA,IAAKD,CAAC,CAAGC,GAAT,CAAcD,CAAC,CAAGE,GAAlB,CAAuBF,CAAC,EAAxB,EAA4BI,GAAG,CAACJ,CAAD,CAAH,CAASI,GAAG,CAACJ,CAAC,CAAG,CAAL,CAAZ,CAA5B,CACAI,GAAG,CAACF,GAAD,CAAH,CAAWM,KAAX,CACA,CACDJ,GAAG,CAACK,OAAJ,GACA,MAAOL,CAAAA,GAAP,CACA,CAfM,CAiBP,MAAO,IAAMM,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,QAAUN,CAAAA,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBI,IAA3B,CAAV,EAAjB,CAEP,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,GAAD,CAAMC,GAAN,QAAcT,CAAAA,IAAI,CAACE,MAAL,IAAiBO,GAAG,CAAGD,GAAvB,EAA8BA,GAA5C,EAA3B","sourcesContent":["export const RandomTab = (tab_) => {\n\tvar i;\n\tvar Num;\n\tvar Nbr = tab_.length;\n\tvar Tab = tab_;\n\n\twhile (Nbr > 0) {\n\t\tNum = Math.floor(Math.random() * Nbr);\n\t\tNbr--;\n\t\tvar szTmp = Tab[Num];\n\t\tfor (i = Num; i < Nbr; i++) Tab[i] = Tab[i + 1];\n\t\tTab[Nbr] = szTmp;\n\t}\n\tTab.reverse();\n\treturn Tab;\n};\n\nexport const randomof = (unit) => Math.floor(Math.random() * unit);\n\nexport const getRandomArbitrary = (min, max) => Math.random() * (max - min) + min;\n"]},"metadata":{},"sourceType":"module"}