{"ast":null,"code":"import _defineProperty from \"/Users/oliv/Documents/GIT_PROJET03/lyon-0919-react-p2-springfield-vice/springfield_vice/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/oliv/Documents/GIT_PROJET03/lyon-0919-react-p2-springfield-vice/springfield_vice/src/pages/Game.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport Homer from \"../components/Homer\";\nimport config from \"../components/configSpringfieldVice.json\";\nimport JoyWrapper from \"../components/Joystick\";\nimport Timer from \"../components/Timer\";\nimport { Donut } from \"../components/Item\";\nimport { Beer } from \"../components/Item\";\nimport DonutCounter from \"../components/DonutCounter\";\nimport BoutonA from \"../components/BoutonA\";\nimport \"./game.css\";\nimport Modal from \"../components/Modal\";\nimport Selma from \"../components/Selma\";\nimport Health from \"../components/Health\";\nimport { getRandomArbitrary } from \"../components/helpers\";\nimport Obstacle from \"../components/Obstacle\";\nimport Bart from \"../components/Bart\";\nimport Seymour from \"../components/Seymour\";\nconst donutStatus = {\n  GROUND: \"ground\",\n  PICKED: \"picked\",\n  THROWN: \"thrown\"\n};\nconst beerStatus = {\n  GROUND: \"ground\",\n  PICKED: \"picked\"\n};\nconst obstacleStatus = {\n  GROUND: \"ground\",\n  PICKED: \"picked\"\n};\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.testLimitsOfMap = () => {\n      if (this.state.positionY < config.limits.topLimit) this.setState({\n        positionY: config.limits.topLimit\n      });else if (this.state.positionY > config.limits.bottomLimit) this.setState({\n        positionY: config.limits.bottomLimit\n      });else if (this.state.positionX > config.limits.rightLimit) this.setState({\n        positionX: config.limits.rightLimit\n      });else if (this.state.positionX < config.limits.leftLimit) this.setState({\n        positionX: config.limits.leftLimit\n      });\n    };\n\n    this.setStep = (stepX, stepY) => {\n      this.stepX = stepX;\n      this.stepY = stepY;\n    };\n\n    this.move = () => {\n      const _this$state = this.state,\n            positionX = _this$state.positionX,\n            positionY = _this$state.positionY;\n      this.setState({\n        positionX: positionX + this.stepX,\n        positionY: positionY + this.stepY,\n        moving: true\n      });\n\n      if (this.stepX < 0) {\n        this.setState({\n          isHomerRunningLeft: true\n        });\n      } else if (this.stepX > 0) {\n        this.setState({\n          isHomerRunningLeft: false\n        });\n      } // if (this.state.isRunning)\n      // \tthis.timeOut = setTimeout(() => this.move(), 10);\n\n\n      if (this.state.isRunning === false) this.stopRunning();\n      if (positionX !== config.limits.leftLimit) this.setState({\n        relativePositionX: this.state.positionX - this.state.defilement,\n        defilement: this.state.defilement - this.stepX / config.background.defilement\n      });\n    };\n\n    this.startRunning = () => {\n      this.setState({\n        isRunning: true\n      });\n      this.state.intervalHomer = setInterval(() => this.move(), 50);\n    };\n\n    this.stopRunning = () => {\n      this.setState({\n        isRunning: false\n      });\n      clearInterval(this.state.intervalHomer);\n    };\n\n    this.moveSelma = () => {\n      let i = 0;\n      this.intSelma = setInterval(() => {\n        let newPosX = this.state.selmaPos.SelmaMovX[i];\n        let newPosY = this.state.selmaPos.SelmaMovY[i];\n        this.setState({\n          selmaPos: _objectSpread({}, this.state.selmaPos, {\n            positionSelmaX: newPosX,\n            positionSelmaY: newPosY\n          })\n        });\n        i++;\n\n        if (i >= this.state.selmaPos.SelmaMovX.length) {\n          i = 0;\n        }\n      }, 1000);\n    };\n\n    this.moveSeymour = () => {\n      let i = 0;\n      this.intSeymour = setInterval(() => {\n        let newPosX = this.state.seymourPos.SeymourMovX[i];\n        let newPosY = this.state.seymourPos.SeymourMovY[i];\n        this.setState({\n          seymourPos: _objectSpread({}, this.state.seymourPos, {\n            positionSeymourX: newPosX,\n            positionSeymourY: newPosY\n          })\n        });\n        i++;\n\n        if (i >= this.state.seymourPos.SeymourMovX.length) {\n          i = 0;\n        }\n      }, 1000);\n    };\n\n    this.moveBart = () => {\n      let i = 0;\n      this.intBart = setInterval(() => {\n        let newPosX = this.state.bartPos.BartMovX[i];\n        let newPosY = this.state.bartPos.BartMovY[i];\n        this.setState({\n          bartPos: _objectSpread({}, this.state.bartPos, {\n            positionBartX: newPosX,\n            positionBartY: newPosY\n          })\n        });\n        i++;\n\n        if (i >= this.state.bartPos.BartMovX.length) {\n          i = 0;\n        }\n      }, 1000);\n    };\n\n    this.tick = () => {\n      let seconds = this.state.seconds;\n      this.setState({\n        seconds: seconds - 1\n      }); // GAME_OVER\n\n      if (seconds === 0) {\n        this.setState({\n          seconds: 0\n        });\n        clearInterval(this.interval);\n      }\n    };\n\n    this.isGameOver = () => {\n      const health = this.beerCount() - this.obstacleCollisionCount();\n\n      if (this.state.seconds === 0 || health <= 0) {\n        // Si perdant :\n        this.stopRunning();\n        clearInterval(this.interval);\n        setTimeout(() => {\n          this.props.history.push('game/?modal=true&go=true');\n          this.setState({\n            origin: \"go_lost\"\n          });\n          return;\n        }, 3000);\n      }\n\n      if (this.beerCount() === 100) {\n        // Si gagnant :\n        this.stopRunning();\n        clearInterval(this.interval);\n        this.props.history.push('game/?modal=true&go=true');\n        this.setState({\n          origin: \"go_win\"\n        });\n        return;\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.interval = setInterval(() => {\n        this.tick();\n        this.isGameOver();\n      }, 1000);\n      setInterval(() => this.gameLoop(), 80);\n      this.moveSelma();\n      this.moveBart();\n      this.moveSeymour();\n    };\n\n    this.pauseTimer = () => {\n      if (this.state.paused === false || this.state.seconds === 0) {\n        clearInterval(this.interval);\n        clearInterval(this.intSelma);\n        clearInterval(this.intBart);\n        clearInterval(this.intSeymour);\n      } else {\n        this.componentDidMount();\n      }\n    };\n\n    this.pauseGame = () => {\n      this.setState({\n        paused: !this.state.paused\n      });\n      this.pauseTimer();\n      document.getElementById(\"joystick\").style.opacity = \"0.7\";\n      document.getElementById(\"button_A\").style.opacity = \"1\";\n      document.getElementById(\"obstacle_full\").style.opacity = \"1\";\n      document.getElementById(\"homer_full\").style.opacity = \"1\";\n    };\n\n    this.collisionDetection = item => {\n      if (this.state.relativePositionX > item.positionDonutX - 30 && this.state.relativePositionX < item.positionDonutX + 30 && this.state.positionY < item.positionDonutY + 30 && this.state.positionY > item.positionDonutY - 30 && item.status === \"ground\") item.status = \"picked\";\n    };\n\n    this.collisionDetectionBeer = item => {\n      if (this.state.relativePositionX > item.positionBeerX - 30 && this.state.relativePositionX < item.positionBeerX + 30 && this.state.positionY < item.positionBeerY + 30 && this.state.positionY > item.positionBeerY - 30 && item.status === \"ground\") {\n        if (this.state.homerCollisionHue > 0) this.setState({\n          homerCollisionHue: this.state.homerCollisionHue - 30\n        });\n        item.status = \"picked\";\n      }\n    };\n\n    this.collisionDetectionObstacle = item => {\n      if (this.state.relativePositionX > item.positionObstacleX - 10 && this.state.relativePositionX < item.positionObstacleX + 10 && this.state.positionY < item.positionObstacleY + 30 && this.state.positionY > item.positionObstacleY - 30) {\n        this.setState({\n          isRunning: false,\n          isBlocked: true,\n          homerCollisionHue: this.state.homerCollisionHue + 30\n        });\n        item.status = \"picked\";\n      }\n    };\n\n    this.collisionBart = item => {\n      //\t\tconsole.log(item.positionBartX, this.state.relativePositionX + this.state.defilement)\n      if (this.state.relativePositionX > item.positionBartX - 15 && this.state.relativePositionX < item.positionBartX + 20 && this.state.positionY < item.positionBartY + 40 && this.state.positionY > item.positionBartY - 60) {\n        this.props.history.push('game/?modal=true&go=true');\n        this.setState({\n          origin: \"go_win\"\n        });\n        this.stopRunning();\n        clearInterval(this.interval);\n        return;\n      }\n    };\n\n    this.donutCount = () => {\n      let donutCount = 0;\n      this.state.donutPopped.map(item => item.status === \"picked\" ? donutCount = donutCount + 1 : donutCount = donutCount + 0);\n      return donutCount;\n    };\n\n    this.beerCount = () => {\n      let beerCount = 3;\n      this.state.beerPopped.map(item => item.status === \"picked\" ? beerCount = beerCount + 1 : beerCount = beerCount + 0);\n      return beerCount;\n    };\n\n    this.obstacleCollisionCount = () => {\n      let obstacleCount = 0;\n      this.state.obstaclePopped.map(item => item.status === \"picked\" ? obstacleCount = obstacleCount + 1 : obstacleCount = obstacleCount + 0);\n      return obstacleCount;\n    };\n\n    this.throwingDonut = () => {\n      this.setState({\n        isThrowing: true // donutPopped: {...this.state.donutPopped, picked: false}\n\n      });\n      let donutIndex = this.state.donutPopped.findIndex(item => item.status === \"picked\");\n      console.log(donutIndex);\n      if (donutIndex < 0) donutIndex = 0;\n      const donutPopped = this.state.donutPopped;\n      donutPopped[donutIndex].status = donutStatus.THROWN; // donutPopped[donutIndex].display = false;\n\n      this.setState({\n        donutPopped\n      }); // console.log(\"throw\")\n    };\n\n    this.stopThrowingDonut = () => {\n      this.setState({\n        isThrowing: false,\n        displayDonut: false\n      }); // console.log(\"stopthrow\")\n    };\n\n    this.gameLoop = () => {\n      this.state.donutPopped.map(item => this.collisionDetection(item));\n      this.state.beerPopped.map(item => this.collisionDetectionBeer(item));\n      this.collisionBart(this.state.bartPos);\n      this.state.obstaclePopped.map(item => {\n        this.collisionDetectionObstacle(item);\n      });\n      this.testLimitsOfMap();\n    };\n\n    this.hideButtons = () => {\n      // MODAL\n      clearInterval(this.interval);\n      const joystick_id = document.getElementById(\"joystick\");\n\n      if (joystick_id !== null) {\n        joystick_id.style.opacity = \"0\";\n        document.getElementById(\"button_A\").style.opacity = \"0\";\n        document.getElementById(\"obstacle_full\").style.opacity = \"0.9\";\n        document.getElementById(\"homer_full\").style.opacity = \"0.9\";\n      }\n    };\n\n    this.state = {\n      positionX: config.initialPosition.x,\n      positionY: config.initialPosition.y,\n      showModal: false,\n      seconds: config.timer.seconds,\n      paused: false,\n      donutPosition: 0,\n      obstaclePosition: 0,\n      positionDecal: 0,\n      positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n      catchDonut: false,\n      moving: false,\n      isBlocked: false,\n      isThrowing: false,\n      homerCollisionHue: 0,\n      donutPopped: [{\n        positionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n        positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: donutStatus.GROUND,\n        display: true\n      }, {\n        positionDonutX: parseInt(getRandomArbitrary(1000, 2000)),\n        positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: donutStatus.GROUND,\n        display: true\n      }, {\n        positionDonutX: parseInt(getRandomArbitrary(1000, 2000)),\n        positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: donutStatus.GROUND,\n        display: true\n      }, {\n        positionDonutX: parseInt(getRandomArbitrary(2000, 3000)),\n        positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: donutStatus.GROUND,\n        display: true\n      }, {\n        positionDonutX: parseInt(getRandomArbitrary(2000, 3000)),\n        positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: donutStatus.GROUND,\n        display: true\n      }, {\n        positionDonutX: parseInt(getRandomArbitrary(3000, 4000)),\n        positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: donutStatus.GROUND,\n        display: true\n      }, {\n        positionDonutX: parseInt(getRandomArbitrary(3000, 4000)),\n        positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: donutStatus.GROUND,\n        display: true\n      }, {\n        positionDonutX: parseInt(getRandomArbitrary(3000, 4000)),\n        positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: donutStatus.GROUND,\n        display: true\n      }, {\n        positionDonutX: parseInt(getRandomArbitrary(4000, 5000)),\n        positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: donutStatus.GROUND,\n        display: true\n      }, {\n        positionDonutX: parseInt(getRandomArbitrary(4500, 5500)),\n        positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: donutStatus.GROUND,\n        display: true\n      }, {\n        positionDonutX: parseInt(getRandomArbitrary(4500, 5500)),\n        positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: donutStatus.GROUND,\n        display: true\n      }],\n      beerPopped: [{\n        positionBeerX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n        positionBeerY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: beerStatus.GROUND\n      }, {\n        positionBeerX: parseInt(getRandomArbitrary(1000, 2000)),\n        positionBeerY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: beerStatus.GROUND\n      }, {\n        positionBeerX: parseInt(getRandomArbitrary(2000, 3000)),\n        positionBeerY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: beerStatus.GROUND\n      }, {\n        positionBeerX: parseInt(getRandomArbitrary(2000, 3000)),\n        positionBeerY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: beerStatus.GROUND\n      }, {\n        positionBeerX: parseInt(getRandomArbitrary(3000, 4000)),\n        positionBeerY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: beerStatus.GROUND\n      }, {\n        positionBeerX: parseInt(getRandomArbitrary(4000, 5000)),\n        positionBeerY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: beerStatus.GROUND\n      }, {\n        positionBeerX: parseInt(getRandomArbitrary(4000, 5000)),\n        positionBeerY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: beerStatus.GROUND\n      }, {\n        positionBeerX: parseInt(getRandomArbitrary(5000, 6000)),\n        positionBeerY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: beerStatus.GROUND\n      }],\n      obstaclePopped: [{\n        positionObstacleX: parseInt(getRandomArbitrary(config.limits.leftLimit + 100, 1000)),\n        positionObstacleY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: obstacleStatus.GROUND\n      }, {\n        positionObstacleX: parseInt(getRandomArbitrary(config.limits.leftLimit + 100, 1000)),\n        positionObstacleY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: obstacleStatus.GROUND\n      }, {\n        positionObstacleX: parseInt(getRandomArbitrary(1000, 2000)),\n        positionObstacleY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: obstacleStatus.GROUND\n      }, {\n        positionObstacleX: parseInt(getRandomArbitrary(1000, 2000)),\n        positionObstacleY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: obstacleStatus.GROUND\n      }, {\n        positionObstacleX: parseInt(getRandomArbitrary(2000, 3000)),\n        positionObstacleY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: obstacleStatus.GROUND\n      }, {\n        positionObstacleX: parseInt(getRandomArbitrary(2000, 3000)),\n        positionObstacleY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: obstacleStatus.GROUND\n      }, {\n        positionObstacleX: parseInt(getRandomArbitrary(3000, 4000)),\n        positionObstacleY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: obstacleStatus.GROUND\n      }, {\n        positionObstacleX: parseInt(getRandomArbitrary(3000, 4000)),\n        positionObstacleY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: obstacleStatus.GROUND\n      }, {\n        positionObstacleX: parseInt(getRandomArbitrary(3000, 4000)),\n        positionObstacleY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: obstacleStatus.GROUND\n      }, {\n        positionObstacleX: parseInt(getRandomArbitrary(3000, 4000)),\n        positionObstacleY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: obstacleStatus.GROUND\n      }, {\n        positionObstacleX: parseInt(getRandomArbitrary(4000, 5000)),\n        positionObstacleY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: obstacleStatus.GROUND\n      }, {\n        positionObstacleX: parseInt(getRandomArbitrary(4000, 5000)),\n        positionObstacleY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: obstacleStatus.GROUND\n      }, {\n        positionObstacleX: parseInt(getRandomArbitrary(5000, 5500)),\n        positionObstacleY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: obstacleStatus.GROUND\n      }, {\n        positionObstacleX: parseInt(getRandomArbitrary(5000, 5500)),\n        positionObstacleY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: obstacleStatus.GROUND\n      }, {\n        positionObstacleX: parseInt(getRandomArbitrary(5000, 5500)),\n        positionObstacleY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        status: obstacleStatus.GROUND\n      }],\n      relativePositionX: config.initialPosition.x,\n      isRunning: false,\n      isHomerRunningLeft: false,\n      selmaPos: {\n        positionSelmaX: 1400,\n        positionSelmaY: 130,\n        SelmaMovX: [1420, 1420, 1400, 1350, 1350, 1300, 1280, 1280, 1250, 1250, 1220, 1220, 1200, 1200, 1250, 1250, 1280, 1300, 1320, 1350, 1380],\n        SelmaMovY: [150, 180, 180, 200, 230, 250, 250, 220, 200, 200, 180, 180, 150, 150, 140, 140, 130, 130, 130, 140, 140]\n      },\n      seymourPos: {\n        positionSeymourX: 600,\n        positionSeymourY: 250,\n        SeymourMovX: [600, 620, 620, 600, 580, 580, 550, 550, 530, 530, 520, 500, 500, 520, 550, 550, 580, 580, 580, 580],\n        SeymourMovY: [250, 250, 250, 250, 230, 230, 200, 200, 220, 220, 220, 220, 250, 250, 210, 210, 230, 230, 240, 240]\n      },\n      bartPos: {\n        positionBartX: 6000,\n        positionBartY: 200,\n        BartMovX: [6000, 6000, 6000, 6020, 6020, 6050, 6050, 6100, 6100, 6150, 6150, 6200, 6250, 6250, 6300, 6300, 6250, 6250, 6200, 6200, 6100, 6050],\n        BartMovY: [200, 250, 250, 250, 300, 300, 300, 300, 250, 250, 300, 300, 250, 250, 200, 200, 230, 230, 200, 200, 180, 180]\n      },\n      globalPosition: 0,\n      defilement: 0\n    };\n    this.stepX = 0;\n    this.stepY = 0;\n    this.tick = this.tick.bind(this);\n    this.interval = undefined;\n    this.intObs = undefined;\n    this.displayBarrel = \"none\";\n  }\n\n  render() {\n    // Modal\n    let params = new URLSearchParams(this.props.location.search);\n    const bgStyle = {\n      backgroundPositionY: config.background.position,\n      backgroundPositionX: -this.state.positionX / config.background.defilement,\n      height: config.background.height\n    };\n    let diff1 = 3 + this.beerCount() - this.obstacleCollisionCount();\n    return React.createElement(\"div\", {\n      className: \"game\",\n      style: bgStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 748\n      },\n      __self: this\n    }, React.createElement(Selma, {\n      positionSelmaX: this.state.selmaPos.positionSelmaX + this.state.defilement,\n      positionSelmaY: this.state.selmaPos.positionSelmaY,\n      selmaPos: this.state.selmaPos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 749\n      },\n      __self: this\n    }), React.createElement(Seymour, {\n      positionSeymourX: this.state.seymourPos.positionSeymourX + this.state.defilement,\n      positionSeymourY: this.state.seymourPos.positionSeymourY,\n      seymourPos: this.state.seymourPos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 754\n      },\n      __self: this\n    }), React.createElement(Donut, {\n      donutPopped: this.state.donutPopped,\n      donutPosition: this.state.defilement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 759\n      },\n      __self: this\n    }), React.createElement(Beer, {\n      beerPopped: this.state.beerPopped,\n      beerPosition: this.state.defilement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 760\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"obstacle_full\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761\n      },\n      __self: this\n    }, React.createElement(Obstacle, {\n      obstaclePopped: this.state.obstaclePopped,\n      obstaclePosition: this.state.defilement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762\n      },\n      __self: this\n    })), React.createElement(Bart, {\n      positionBartX: this.state.bartPos.positionBartX + this.state.defilement,\n      positionBartY: this.state.bartPos.positionBartY,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764\n      },\n      __self: this\n    }), React.createElement(Homer, {\n      positionX: this.state.positionX,\n      positionY: this.state.positionY,\n      isRunning: this.state.isRunning,\n      isHomerRunningLeft: this.state.isHomerRunningLeft,\n      donutCount: this.donutCount(),\n      isThrowing: this.state.isThrowing,\n      isDead: diff1,\n      hue: this.state.homerCollisionHue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768\n      },\n      __self: this\n    }), React.createElement(DonutCounter, {\n      donutCount: this.donutCount(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779\n      },\n      __self: this\n    }), React.createElement(Health, {\n      beerCounter: this.beerCount(),\n      obstCounter: this.obstacleCollisionCount(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780\n      },\n      __self: this\n    }), React.createElement(JoyWrapper, {\n      setStep: this.setStep,\n      startRunning: this.startRunning,\n      stopRunning: this.stopRunning,\n      toTheRight: this.toTheRight,\n      toTheLeft: this.toTheLeft,\n      toTheTop: this.toTheTop,\n      toTheBottom: this.toTheBottom,\n      displayJoystick: this.state.paused,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782\n      },\n      __self: this\n    }), React.createElement(BoutonA, {\n      throwingDonut: this.throwingDonut,\n      stopThrowingDonut: this.stopThrowingDonut,\n      displayButtonA: this.state.paused,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793\n      },\n      __self: this\n    }), React.createElement(Timer, {\n      pauseGame: this.pauseGame,\n      seconds: this.state.seconds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 799\n      },\n      __self: this\n    }), params.get(\"modal\") && React.createElement(Modal, {\n      close: () => {\n        this.props.history.push(this.props.location.pathname);\n      },\n      modal: this.props.location.search,\n      origin: this.state.origin,\n      resume: () => this.pauseGame(),\n      hide: () => this.hideButtons(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 802\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/oliv/Documents/GIT_PROJET03/lyon-0919-react-p2-springfield-vice/springfield_vice/src/pages/Game.js"],"names":["React","Component","Homer","config","JoyWrapper","Timer","Donut","Beer","DonutCounter","BoutonA","Modal","Selma","Health","getRandomArbitrary","Obstacle","Bart","Seymour","donutStatus","GROUND","PICKED","THROWN","beerStatus","obstacleStatus","Game","constructor","props","testLimitsOfMap","state","positionY","limits","topLimit","setState","bottomLimit","positionX","rightLimit","leftLimit","setStep","stepX","stepY","move","moving","isHomerRunningLeft","isRunning","stopRunning","relativePositionX","defilement","background","startRunning","intervalHomer","setInterval","clearInterval","moveSelma","i","intSelma","newPosX","selmaPos","SelmaMovX","newPosY","SelmaMovY","positionSelmaX","positionSelmaY","length","moveSeymour","intSeymour","seymourPos","SeymourMovX","SeymourMovY","positionSeymourX","positionSeymourY","moveBart","intBart","bartPos","BartMovX","BartMovY","positionBartX","positionBartY","tick","seconds","interval","isGameOver","health","beerCount","obstacleCollisionCount","setTimeout","history","push","origin","componentDidMount","gameLoop","pauseTimer","paused","pauseGame","document","getElementById","style","opacity","collisionDetection","item","positionDonutX","positionDonutY","status","collisionDetectionBeer","positionBeerX","positionBeerY","homerCollisionHue","collisionDetectionObstacle","positionObstacleX","positionObstacleY","isBlocked","collisionBart","donutCount","donutPopped","map","beerPopped","obstacleCount","obstaclePopped","throwingDonut","isThrowing","donutIndex","findIndex","console","log","stopThrowingDonut","displayDonut","hideButtons","joystick_id","initialPosition","x","y","showModal","timer","donutPosition","obstaclePosition","positionDecal","parseInt","catchDonut","display","globalPosition","bind","undefined","intObs","displayBarrel","render","params","URLSearchParams","location","search","bgStyle","backgroundPositionY","position","backgroundPositionX","height","diff1","toTheRight","toTheLeft","toTheTop","toTheBottom","get","pathname"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Homer from \"../components/Homer\";\nimport config from \"../components/configSpringfieldVice.json\";\nimport JoyWrapper from \"../components/Joystick\";\nimport Timer from \"../components/Timer\";\nimport { Donut } from \"../components/Item\";\nimport { Beer } from \"../components/Item\";\nimport DonutCounter from \"../components/DonutCounter\";\nimport BoutonA from \"../components/BoutonA\";\nimport \"./game.css\";\nimport Modal from \"../components/Modal\";\nimport Selma from \"../components/Selma\";\nimport Health from \"../components/Health\";\nimport { getRandomArbitrary } from \"../components/helpers\";\nimport Obstacle from \"../components/Obstacle\";\nimport Bart from \"../components/Bart\";\nimport Seymour from \"../components/Seymour\";\n\nconst donutStatus = {\n\tGROUND: \"ground\",\n\tPICKED: \"picked\",\n\tTHROWN: \"thrown\"\n};\nconst beerStatus = {\n\tGROUND: \"ground\",\n\tPICKED: \"picked\"\n};\nconst obstacleStatus = {\n\tGROUND: \"ground\",\n\tPICKED: \"picked\"\n};\n\nclass Game extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpositionX: config.initialPosition.x,\n\t\t\tpositionY: config.initialPosition.y,\n\t\t\tshowModal: false,\n\t\t\tseconds: config.timer.seconds,\n\t\t\tpaused: false,\n\t\t\tdonutPosition: 0,\n\t\t\tobstaclePosition: 0,\n\t\t\tpositionDecal: 0,\n\t\t\tpositionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n\t\t\tcatchDonut: false,\n\t\t\tmoving: false,\n\t\t\tisBlocked: false,\n\t\t\tisThrowing: false,\n\t\t\thomerCollisionHue: 0,\n\t\t\tdonutPopped: [\n\t\t\t\t{\n\t\t\t\t\tpositionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n\t\t\t\t\tpositionDonutY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: donutStatus.GROUND,\n\t\t\t\t\tdisplay: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionDonutX: parseInt(getRandomArbitrary(1000, 2000)),\n\t\t\t\t\tpositionDonutY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: donutStatus.GROUND,\n\t\t\t\t\tdisplay: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionDonutX: parseInt(getRandomArbitrary(1000, 2000)),\n\t\t\t\t\tpositionDonutY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: donutStatus.GROUND,\n\t\t\t\t\tdisplay: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionDonutX: parseInt(getRandomArbitrary(2000, 3000)),\n\t\t\t\t\tpositionDonutY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: donutStatus.GROUND,\n\t\t\t\t\tdisplay: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionDonutX: parseInt(getRandomArbitrary(2000, 3000)),\n\t\t\t\t\tpositionDonutY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: donutStatus.GROUND,\n\t\t\t\t\tdisplay: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionDonutX: parseInt(getRandomArbitrary(3000, 4000)),\n\t\t\t\t\tpositionDonutY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: donutStatus.GROUND,\n\t\t\t\t\tdisplay: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionDonutX: parseInt(getRandomArbitrary(3000, 4000)),\n\t\t\t\t\tpositionDonutY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: donutStatus.GROUND,\n\t\t\t\t\tdisplay: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionDonutX: parseInt(getRandomArbitrary(3000, 4000)),\n\t\t\t\t\tpositionDonutY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: donutStatus.GROUND,\n\t\t\t\t\tdisplay: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionDonutX: parseInt(getRandomArbitrary(4000, 5000)),\n\t\t\t\t\tpositionDonutY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: donutStatus.GROUND,\n\t\t\t\t\tdisplay: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionDonutX: parseInt(getRandomArbitrary(4500, 5500)),\n\t\t\t\t\tpositionDonutY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: donutStatus.GROUND,\n\t\t\t\t\tdisplay: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionDonutX: parseInt(getRandomArbitrary(4500, 5500)),\n\t\t\t\t\tpositionDonutY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: donutStatus.GROUND,\n\t\t\t\t\tdisplay: true\n\t\t\t\t}\n\t\t\t],\n\t\t\tbeerPopped: [\n\t\t\t\t{\n\t\t\t\t\tpositionBeerX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n\t\t\t\t\tpositionBeerY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n\t\t\t\t\tstatus: beerStatus.GROUND\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionBeerX: parseInt(getRandomArbitrary(1000, 2000)),\n\t\t\t\t\tpositionBeerY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n\t\t\t\t\tstatus: beerStatus.GROUND\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionBeerX: parseInt(getRandomArbitrary(2000, 3000)),\n\t\t\t\t\tpositionBeerY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n\t\t\t\t\tstatus: beerStatus.GROUND\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionBeerX: parseInt(getRandomArbitrary(2000, 3000)),\n\t\t\t\t\tpositionBeerY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n\t\t\t\t\tstatus: beerStatus.GROUND\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionBeerX: parseInt(getRandomArbitrary(3000, 4000)),\n\t\t\t\t\tpositionBeerY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n\t\t\t\t\tstatus: beerStatus.GROUND\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionBeerX: parseInt(getRandomArbitrary(4000, 5000)),\n\t\t\t\t\tpositionBeerY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n\t\t\t\t\tstatus: beerStatus.GROUND\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionBeerX: parseInt(getRandomArbitrary(4000, 5000)),\n\t\t\t\t\tpositionBeerY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n\t\t\t\t\tstatus: beerStatus.GROUND\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionBeerX: parseInt(getRandomArbitrary(5000, 6000)),\n\t\t\t\t\tpositionBeerY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n\t\t\t\t\tstatus: beerStatus.GROUND\n\t\t\t\t}\n\t\t\t],\n\t\t\tobstaclePopped: [\n\t\t\t\t{\n\t\t\t\t\tpositionObstacleX: parseInt(getRandomArbitrary(config.limits.leftLimit + 100, 1000)),\n\t\t\t\t\tpositionObstacleY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: obstacleStatus.GROUND\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionObstacleX: parseInt(getRandomArbitrary(config.limits.leftLimit + 100, 1000)),\n\t\t\t\t\tpositionObstacleY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: obstacleStatus.GROUND\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionObstacleX: parseInt(getRandomArbitrary(1000, 2000)),\n\t\t\t\t\tpositionObstacleY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: obstacleStatus.GROUND\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionObstacleX: parseInt(getRandomArbitrary(1000, 2000)),\n\t\t\t\t\tpositionObstacleY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: obstacleStatus.GROUND\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionObstacleX: parseInt(getRandomArbitrary(2000, 3000)),\n\t\t\t\t\tpositionObstacleY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: obstacleStatus.GROUND\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionObstacleX: parseInt(getRandomArbitrary(2000, 3000)),\n\t\t\t\t\tpositionObstacleY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: obstacleStatus.GROUND\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionObstacleX: parseInt(getRandomArbitrary(3000, 4000)),\n\t\t\t\t\tpositionObstacleY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: obstacleStatus.GROUND\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionObstacleX: parseInt(getRandomArbitrary(3000, 4000)),\n\t\t\t\t\tpositionObstacleY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: obstacleStatus.GROUND\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionObstacleX: parseInt(getRandomArbitrary(3000, 4000)),\n\t\t\t\t\tpositionObstacleY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: obstacleStatus.GROUND\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionObstacleX: parseInt(getRandomArbitrary(3000, 4000)),\n\t\t\t\t\tpositionObstacleY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: obstacleStatus.GROUND\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionObstacleX: parseInt(getRandomArbitrary(4000, 5000)),\n\t\t\t\t\tpositionObstacleY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: obstacleStatus.GROUND\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionObstacleX: parseInt(getRandomArbitrary(4000, 5000)),\n\t\t\t\t\tpositionObstacleY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: obstacleStatus.GROUND\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionObstacleX: parseInt(getRandomArbitrary(5000, 5500)),\n\t\t\t\t\tpositionObstacleY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: obstacleStatus.GROUND\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionObstacleX: parseInt(getRandomArbitrary(5000, 5500)),\n\t\t\t\t\tpositionObstacleY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: obstacleStatus.GROUND\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionObstacleX: parseInt(getRandomArbitrary(5000, 5500)),\n\t\t\t\t\tpositionObstacleY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tstatus: obstacleStatus.GROUND\n\t\t\t\t}\n\t\t\t],\n\t\t\trelativePositionX: config.initialPosition.x,\n\t\t\tisRunning: false,\n\t\t\tisHomerRunningLeft: false,\n\t\t\tselmaPos: {\n\t\t\t\tpositionSelmaX: 1400,\n\t\t\t\tpositionSelmaY: 130,\n\t\t\t\tSelmaMovX: [\n\t\t\t\t\t1420,\n\t\t\t\t\t1420,\n\t\t\t\t\t1400,\n\t\t\t\t\t1350,\n\t\t\t\t\t1350,\n\t\t\t\t\t1300,\n\t\t\t\t\t1280,\n\t\t\t\t\t1280,\n\t\t\t\t\t1250,\n\t\t\t\t\t1250,\n\t\t\t\t\t1220,\n\t\t\t\t\t1220,\n\t\t\t\t\t1200,\n\t\t\t\t\t1200,\n\t\t\t\t\t1250,\n\t\t\t\t\t1250,\n\t\t\t\t\t1280,\n\t\t\t\t\t1300,\n\t\t\t\t\t1320,\n\t\t\t\t\t1350,\n\t\t\t\t\t1380\n\t\t\t\t],\n\t\t\t\tSelmaMovY: [\n\t\t\t\t\t150,\n\t\t\t\t\t180,\n\t\t\t\t\t180,\n\t\t\t\t\t200,\n\t\t\t\t\t230,\n\t\t\t\t\t250,\n\t\t\t\t\t250,\n\t\t\t\t\t220,\n\t\t\t\t\t200,\n\t\t\t\t\t200,\n\t\t\t\t\t180,\n\t\t\t\t\t180,\n\t\t\t\t\t150,\n\t\t\t\t\t150,\n\t\t\t\t\t140,\n\t\t\t\t\t140,\n\t\t\t\t\t130,\n\t\t\t\t\t130,\n\t\t\t\t\t130,\n\t\t\t\t\t140,\n\t\t\t\t\t140\n\t\t\t\t]\n\t\t\t},\n\t\t\tseymourPos: {\n\t\t\t\tpositionSeymourX: 600,\n\t\t\t\tpositionSeymourY: 250,\n\t\t\t\tSeymourMovX: [\n\t\t\t\t\t600,\n\t\t\t\t\t620,\n\t\t\t\t\t620,\n\t\t\t\t\t600,\n\t\t\t\t\t580,\n\t\t\t\t\t580,\n\t\t\t\t\t550,\n\t\t\t\t\t550,\n\t\t\t\t\t530,\n\t\t\t\t\t530,\n\t\t\t\t\t520,\n\t\t\t\t\t500,\n\t\t\t\t\t500,\n\t\t\t\t\t520,\n\t\t\t\t\t550,\n\t\t\t\t\t550,\n\t\t\t\t\t580,\n\t\t\t\t\t580,\n\t\t\t\t\t580,\n\t\t\t\t\t580\n\t\t\t\t],\n\t\t\t\tSeymourMovY: [\n\t\t\t\t\t250,\n\t\t\t\t\t250,\n\t\t\t\t\t250,\n\t\t\t\t\t250,\n\t\t\t\t\t230,\n\t\t\t\t\t230,\n\t\t\t\t\t200,\n\t\t\t\t\t200,\n\t\t\t\t\t220,\n\t\t\t\t\t220,\n\t\t\t\t\t220,\n\t\t\t\t\t220,\n\t\t\t\t\t250,\n\t\t\t\t\t250,\n\t\t\t\t\t210,\n\t\t\t\t\t210,\n\t\t\t\t\t230,\n\t\t\t\t\t230,\n\t\t\t\t\t240,\n\t\t\t\t\t240\n\t\t\t\t]\n\t\t\t},\n\t\t\tbartPos: {\n\t\t\t\tpositionBartX: 6000,\n\t\t\t\tpositionBartY: 200,\n\t\t\t\tBartMovX: [\n\t\t\t\t\t6000,\n\t\t\t\t\t6000,\n\t\t\t\t\t6000,\n\t\t\t\t\t6020,\n\t\t\t\t\t6020,\n\t\t\t\t\t6050,\n\t\t\t\t\t6050,\n\t\t\t\t\t6100,\n\t\t\t\t\t6100,\n\t\t\t\t\t6150,\n\t\t\t\t\t6150,\n\t\t\t\t\t6200,\n\t\t\t\t\t6250,\n\t\t\t\t\t6250,\n\t\t\t\t\t6300,\n\t\t\t\t\t6300,\n\t\t\t\t\t6250,\n\t\t\t\t\t6250,\n\t\t\t\t\t6200,\n\t\t\t\t\t6200,\n\t\t\t\t\t6100,\n\t\t\t\t\t6050\n\t\t\t\t],\n\t\t\t\tBartMovY: [\n\t\t\t\t\t200,\n\t\t\t\t\t250,\n\t\t\t\t\t250,\n\t\t\t\t\t250,\n\t\t\t\t\t300,\n\t\t\t\t\t300,\n\t\t\t\t\t300,\n\t\t\t\t\t300,\n\t\t\t\t\t250,\n\t\t\t\t\t250,\n\t\t\t\t\t300,\n\t\t\t\t\t300,\n\t\t\t\t\t250,\n\t\t\t\t\t250,\n\t\t\t\t\t200,\n\t\t\t\t\t200,\n\t\t\t\t\t230,\n\t\t\t\t\t230,\n\t\t\t\t\t200,\n\t\t\t\t\t200,\n\t\t\t\t\t180,\n\t\t\t\t\t180\n\t\t\t\t]\n\t\t\t},\n\t\t\tglobalPosition: 0,\n\t\t\tdefilement: 0\n\t\t};\n\n\t\tthis.stepX = 0;\n\t\tthis.stepY = 0;\n\t\tthis.tick = this.tick.bind(this);\n\t\tthis.interval = undefined;\n\t\tthis.intObs = undefined;\n\t\tthis.displayBarrel = \"none\";\n\t}\n\n\ttestLimitsOfMap = () => {\n\t\tif (this.state.positionY < config.limits.topLimit) this.setState({ positionY: config.limits.topLimit });\n\t\telse if (this.state.positionY > config.limits.bottomLimit)\n\t\t\tthis.setState({ positionY: config.limits.bottomLimit });\n\t\telse if (this.state.positionX > config.limits.rightLimit)\n\t\t\tthis.setState({ positionX: config.limits.rightLimit });\n\t\telse if (this.state.positionX < config.limits.leftLimit)\n\t\t\tthis.setState({ positionX: config.limits.leftLimit });\n\t};\n\n\tsetStep = (stepX, stepY) => {\n\t\tthis.stepX = stepX;\n\t\tthis.stepY = stepY;\n\t};\n\n\tmove = () => {\n\t\tconst { positionX, positionY } = this.state;\n\n\t\tthis.setState({\n\t\t\tpositionX: positionX + this.stepX,\n\t\t\tpositionY: positionY + this.stepY,\n\t\t\tmoving: true\n\t\t});\n\n\t\tif (this.stepX < 0) {\n\t\t\tthis.setState({ isHomerRunningLeft: true });\n\t\t} else if (this.stepX > 0) {\n\t\t\tthis.setState({ isHomerRunningLeft: false });\n\t\t}\n\t\t// if (this.state.isRunning)\n\t\t// \tthis.timeOut = setTimeout(() => this.move(), 10);\n\n\t\tif (this.state.isRunning === false) this.stopRunning();\n\n\t\tif (positionX !== config.limits.leftLimit)\n\t\t\tthis.setState({\n\t\t\t\trelativePositionX: this.state.positionX - this.state.defilement,\n\t\t\t\tdefilement: this.state.defilement - this.stepX / config.background.defilement\n\t\t\t});\n\t};\n\n\tstartRunning = () => {\n\t\tthis.setState({ isRunning: true });\n\t\tthis.state.intervalHomer = setInterval(() => this.move(), 50);\n\t};\n\tstopRunning = () => {\n\t\tthis.setState({ isRunning: false });\n\t\tclearInterval(this.state.intervalHomer);\n\t};\n\n\tmoveSelma = () => {\n\t\tlet i = 0;\n\t\tthis.intSelma = setInterval(() => {\n\t\t\tlet newPosX = this.state.selmaPos.SelmaMovX[i];\n\t\t\tlet newPosY = this.state.selmaPos.SelmaMovY[i];\n\t\t\tthis.setState({\n\t\t\t\tselmaPos: { ...this.state.selmaPos, positionSelmaX: newPosX, positionSelmaY: newPosY }\n\t\t\t});\n\t\t\ti++;\n\t\t\tif (i >= this.state.selmaPos.SelmaMovX.length) {\n\t\t\t\ti = 0;\n\t\t\t}\n\t\t}, 1000);\n\t};\n\n\tmoveSeymour = () => {\n\t\tlet i = 0;\n\t\tthis.intSeymour = setInterval(() => {\n\t\t\tlet newPosX = this.state.seymourPos.SeymourMovX[i];\n\t\t\tlet newPosY = this.state.seymourPos.SeymourMovY[i];\n\t\t\tthis.setState({\n\t\t\t\tseymourPos: { ...this.state.seymourPos, positionSeymourX: newPosX, positionSeymourY: newPosY }\n\t\t\t});\n\t\t\ti++;\n\t\t\tif (i >= this.state.seymourPos.SeymourMovX.length) {\n\t\t\t\ti = 0;\n\t\t\t}\n\t\t}, 1000);\n\t};\n\n\tmoveBart = () => {\n\t\tlet i = 0;\n\t\tthis.intBart = setInterval(() => {\n\t\t\tlet newPosX = this.state.bartPos.BartMovX[i];\n\t\t\tlet newPosY = this.state.bartPos.BartMovY[i];\n\t\t\tthis.setState({ bartPos: { ...this.state.bartPos, positionBartX: newPosX, positionBartY: newPosY } });\n\t\t\ti++;\n\t\t\tif (i >= this.state.bartPos.BartMovX.length) {\n\t\t\t\ti = 0;\n\t\t\t}\n\t\t}, 1000);\n\t};\n\n\ttick = () => {\n\t\tlet { seconds } = this.state;\n\t\tthis.setState({ seconds: seconds - 1 });\n\t\t// GAME_OVER\n\t\tif (seconds === 0) {\n\t\t\tthis.setState({ seconds: 0 });\n\t\t\tclearInterval(this.interval);\n\t\t}\n\t};\n\n\tisGameOver = () => {\n\t\tconst health = this.beerCount() - this.obstacleCollisionCount();\n\t\tif (this.state.seconds === 0 || health <= 0) {\n\t\t\t// Si perdant :\n\t\t\tthis.stopRunning();\n\t\t\tclearInterval(this.interval);\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.props.history.push('game/?modal=true&go=true');\n\t\t\t\tthis.setState({origin: \"go_lost\"});\n\t\t\t\treturn;\n\t\t\t}, 3000)\n\t\t}\n\t\tif(this.beerCount() === 100) {\n\t\t\t// Si gagnant :\n\t\t\tthis.stopRunning();\n\t\t\tclearInterval(this.interval);\n\t\t\tthis.props.history.push('game/?modal=true&go=true');\n\t\t\tthis.setState({origin: \"go_win\"});\n\t\t\treturn;\n\t\t} \n\t}\n\n\tcomponentDidMount = () => {\n\t\tthis.interval = setInterval(() => {\n\t\t\tthis.tick()\n\t\t\tthis.isGameOver()\n\t\t},1000);\n\t\tsetInterval(() => this.gameLoop(), 80);\n\t\tthis.moveSelma();\n\t\tthis.moveBart();\n\t\tthis.moveSeymour();\n\t};\n\n\tpauseTimer = () => {\n\t\tif (this.state.paused === false || this.state.seconds === 0) {\n\t\t\tclearInterval(this.interval);\n\t\t\tclearInterval(this.intSelma);\n\t\t\tclearInterval(this.intBart);\n\t\t\tclearInterval(this.intSeymour);\n\t\t} else {\n\t\t\tthis.componentDidMount();\n\t\t}\n\t};\n\n\tpauseGame = () => { \n\t\tthis.setState({ paused: !this.state.paused });\n\t\tthis.pauseTimer();\n\t\tdocument.getElementById(\"joystick\").style.opacity = \"0.7\";\n\t\tdocument.getElementById(\"button_A\").style.opacity = \"1\";\n\t\tdocument.getElementById(\"obstacle_full\").style.opacity = \"1\";\n\t\tdocument.getElementById(\"homer_full\").style.opacity = \"1\";\n\t};\n\n\tcollisionDetection = (item) => {\n\t\tif (\n\t\t\tthis.state.relativePositionX > item.positionDonutX - 30 &&\n\t\t\tthis.state.relativePositionX < item.positionDonutX + 30 &&\n\t\t\tthis.state.positionY < item.positionDonutY + 30 &&\n\t\t\tthis.state.positionY > item.positionDonutY - 30 &&\n\t\t\titem.status === \"ground\"\n\t\t)\n\t\t\titem.status = \"picked\";\n\t};\n\tcollisionDetectionBeer = (item) => {\n\t\tif (\n\t\t\tthis.state.relativePositionX > item.positionBeerX - 30 &&\n\t\t\tthis.state.relativePositionX < item.positionBeerX + 30 &&\n\t\t\tthis.state.positionY < item.positionBeerY + 30 &&\n\t\t\tthis.state.positionY > item.positionBeerY - 30 &&\n\t\t\titem.status === \"ground\"\n\t\t) {\n\t\t\tif (this.state.homerCollisionHue > 0)\n\t\t\t\tthis.setState({ homerCollisionHue: this.state.homerCollisionHue - 30 });\n\t\t\titem.status = \"picked\";\n\t\t}\n\t};\n\n\tcollisionDetectionObstacle = (item) => {\n\t\tif (\n\t\t\tthis.state.relativePositionX > item.positionObstacleX - 10 &&\n\t\t\tthis.state.relativePositionX < item.positionObstacleX + 10 &&\n\t\t\tthis.state.positionY < item.positionObstacleY + 30 &&\n\t\t\tthis.state.positionY > item.positionObstacleY - 30\n\t\t) {\n\t\t\tthis.setState({\n\t\t\t\tisRunning: false,\n\t\t\t\tisBlocked: true,\n\t\t\t\thomerCollisionHue: this.state.homerCollisionHue + 30\n\t\t\t});\n\t\t\titem.status = \"picked\";\n\t\t}\n\t};\n\n\tcollisionBart = (item) => {\n//\t\tconsole.log(item.positionBartX, this.state.relativePositionX + this.state.defilement)\n\t\tif (\n\t\t\tthis.state.relativePositionX > item.positionBartX - 15 &&\n\t\t\tthis.state.relativePositionX < item.positionBartX + 20 &&\n\t\t\tthis.state.positionY < item.positionBartY + 40 &&\n\t\t\tthis.state.positionY > item.positionBartY - 60\n\t\t) {\n\t\t\tthis.props.history.push('game/?modal=true&go=true');\n\t\t\tthis.setState({origin: \"go_win\"});\n\t\t\tthis.stopRunning();\n\t\t\tclearInterval(this.interval);\n\t\t\treturn;\n\t\t}\n\t};\n\n\tdonutCount = () => {\n\t\tlet donutCount = 0;\n\t\tthis.state.donutPopped.map((item) =>\n\t\t\titem.status === \"picked\" ? (donutCount = donutCount + 1) : (donutCount = donutCount + 0)\n\t\t);\n\n\t\treturn donutCount;\n\t};\n\tbeerCount = () => {\n\t\tlet beerCount = 3;\n\t\tthis.state.beerPopped.map((item) =>\n\t\t\titem.status === \"picked\" ? (beerCount = beerCount + 1) : (beerCount = beerCount + 0)\n\t\t);\n\n\t\treturn beerCount;\n\t};\n\tobstacleCollisionCount = () => {\n\t\tlet obstacleCount = 0;\n\t\tthis.state.obstaclePopped.map((item) =>\n\t\t\titem.status === \"picked\" ? (obstacleCount = obstacleCount + 1) : (obstacleCount = obstacleCount + 0)\n\t\t);\n\n\t\treturn obstacleCount;\n\t};\n\n\tthrowingDonut = () => {\n\t\tthis.setState({\n\t\t\tisThrowing: true\n\t\t\t// donutPopped: {...this.state.donutPopped, picked: false}\n\t\t});\n\t\tlet donutIndex = this.state.donutPopped.findIndex((item) => item.status === \"picked\");\n\t\tconsole.log(donutIndex);\n\t\tif (donutIndex < 0) donutIndex = 0;\n\t\tconst { donutPopped } = this.state;\n\t\tdonutPopped[donutIndex].status = donutStatus.THROWN;\n\t\t// donutPopped[donutIndex].display = false;\n\t\tthis.setState({ donutPopped });\n\t\t// console.log(\"throw\")\n\t};\n\n\tstopThrowingDonut = () => {\n\t\tthis.setState({ isThrowing: false, displayDonut: false });\n\t\t// console.log(\"stopthrow\")\n\t};\n\n\tgameLoop = () => {\n\t\tthis.state.donutPopped.map((item) => this.collisionDetection(item));\n\t\tthis.state.beerPopped.map((item) => this.collisionDetectionBeer(item));\n\t\t\n\t\tthis.collisionBart(this.state.bartPos);\n\t\tthis.state.obstaclePopped.map((item) => {\n\t\t\tthis.collisionDetectionObstacle(item);\n\t\t});\n\t\tthis.testLimitsOfMap();\n\t};\n\n\thideButtons = () => {\n\t\t// MODAL\n\t\tclearInterval(this.interval);\n\t\tconst joystick_id = document.getElementById(\"joystick\");\n\t\tif (joystick_id !== null) {\n\t\t\tjoystick_id.style.opacity = \"0\";\n\t\t\tdocument.getElementById(\"button_A\").style.opacity = \"0\";\n\t\t\tdocument.getElementById(\"obstacle_full\").style.opacity = \"0.9\";\n\t\t\tdocument.getElementById(\"homer_full\").style.opacity = \"0.9\";\n\t\t}\n\t}\n\t\n\trender() {\n\t\t// Modal\n\t\tlet params = new URLSearchParams(this.props.location.search);\n\n\t\tconst bgStyle = {\n\t\t\tbackgroundPositionY: config.background.position,\n\t\t\tbackgroundPositionX: -this.state.positionX / config.background.defilement,\n\t\t\theight: config.background.height\n\t\t};\n\n\t\tlet diff1 = 3 + this.beerCount() - this.obstacleCollisionCount();\n\n\t\treturn (\n\t\t\t<div className=\"game\" style={bgStyle}>\n\t\t\t\t<Selma\n\t\t\t\t\tpositionSelmaX={this.state.selmaPos.positionSelmaX + this.state.defilement}\n\t\t\t\t\tpositionSelmaY={this.state.selmaPos.positionSelmaY}\n\t\t\t\t\tselmaPos={this.state.selmaPos}\n\t\t\t\t/>\n\t\t\t\t<Seymour\n\t\t\t\t\tpositionSeymourX={this.state.seymourPos.positionSeymourX + this.state.defilement}\n\t\t\t\t\tpositionSeymourY={this.state.seymourPos.positionSeymourY}\n\t\t\t\t\tseymourPos={this.state.seymourPos}\n\t\t\t\t/>\n\t\t\t\t<Donut donutPopped={this.state.donutPopped} donutPosition={this.state.defilement} />\n\t\t\t\t<Beer beerPopped={this.state.beerPopped} beerPosition={this.state.defilement} />\n\t\t\t\t<div id=\"obstacle_full\">\n\t\t\t\t\t<Obstacle obstaclePopped={this.state.obstaclePopped} obstaclePosition={this.state.defilement} />\n\t\t\t\t</div>\n\t\t\t\t<Bart\n\t\t\t\t\tpositionBartX={this.state.bartPos.positionBartX + this.state.defilement}\n\t\t\t\t\tpositionBartY={this.state.bartPos.positionBartY}\n\t\t\t\t/>\n\t\t\t\t<Homer\n\t\t\t\t\tpositionX={this.state.positionX}\n\t\t\t\t\tpositionY={this.state.positionY}\n\t\t\t\t\tisRunning={this.state.isRunning}\n\t\t\t\t\tisHomerRunningLeft={this.state.isHomerRunningLeft}\n\t\t\t\t\tdonutCount={this.donutCount()}\n\t\t\t\t\tisThrowing={this.state.isThrowing}\n\t\t\t\t\tisDead={diff1}\n\t\t\t\t\thue={this.state.homerCollisionHue}\n\t\t\t\t/>\n\n\t\t\t\t<DonutCounter donutCount={this.donutCount()} />\n\t\t\t\t<Health beerCounter={this.beerCount()} obstCounter={this.obstacleCollisionCount()} />\n\n\t\t\t\t<JoyWrapper\n\t\t\t\t\tsetStep={this.setStep}\n\t\t\t\t\tstartRunning={this.startRunning}\n\t\t\t\t\tstopRunning={this.stopRunning}\n\t\t\t\t\ttoTheRight={this.toTheRight}\n\t\t\t\t\ttoTheLeft={this.toTheLeft}\n\t\t\t\t\ttoTheTop={this.toTheTop}\n\t\t\t\t\ttoTheBottom={this.toTheBottom}\n\t\t\t\t\tdisplayJoystick={this.state.paused}\n\t\t\t\t/>\n\n\t\t\t\t<BoutonA\n\t\t\t\t\tthrowingDonut={this.throwingDonut}\n\t\t\t\t\tstopThrowingDonut={this.stopThrowingDonut}\n\t\t\t\t\tdisplayButtonA={this.state.paused}\n\t\t\t\t/>\n\n\t\t\t\t<Timer pauseGame={this.pauseGame} seconds={this.state.seconds} />\n\n\t\t\t\t{params.get(\"modal\") && (\n\t\t\t\t\t<Modal\n\t\t\t\t\t\tclose={() => {\n\t\t\t\t\t\t\tthis.props.history.push(this.props.location.pathname);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tmodal={this.props.location.search}\n\t\t\t\t\t\torigin={this.state.origin}\n\t\t\t\t\t\tresume={() => this.pauseGame()}\n\t\t\t\t\t\thide={() => this.hideButtons()}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}