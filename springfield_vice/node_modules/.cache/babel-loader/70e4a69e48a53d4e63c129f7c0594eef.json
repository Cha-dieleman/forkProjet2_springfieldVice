{"ast":null,"code":"var _jsxFileName = \"/Users/oliv/Documents/GIT_PROJET03/lyon-0919-react-p2-springfield-vice/springfield_vice/src/pages/Game.js\";\nimport React, { Component } from \"react\";\nimport Homer from \"../components/Homer\"; //import ObstacleF from \"../components/ObstacleF\";\n\nimport config from \"../components/configSpringfieldVice.json\";\nimport JoyWrapper from \"../components/Joystick\";\nimport Timer from \"../components/Timer\";\nimport Donut from \"../components/Item\";\nimport DonutCounter from \"../components/DonutCounter\";\nimport BoutonA from \"../components/BoutonA\";\nimport \"./game.css\";\nimport Modal from \"../components/Modal\";\nimport { getRandomArbitrary } from \"../components/helpers\";\nimport Obstacle from \"../components/Obstacle\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.testLimitsOfMap = () => {\n      if (this.state.positionY < config.limits.topLimit) this.setState({\n        positionY: config.limits.topLimit\n      });else if (this.state.positionY > config.limits.bottomLimit) this.setState({\n        positionY: config.limits.bottomLimit\n      });else if (this.state.positionX > config.limits.rightLimit) this.setState({\n        positionX: config.limits.rightLimit\n      });else if (this.state.positionX < config.limits.leftLimit) this.setState({\n        positionX: config.limits.leftLimit\n      });\n      if (this.collisionDetectionObstacle()) this.setState({\n        positionX: this.state.positionObstacleX,\n        positionY: this.state.positionObstacleY\n      });\n    };\n\n    this.setStep = (stepX, stepY) => {\n      this.stepX = stepX;\n      this.stepY = stepY;\n    };\n\n    this.move = () => {\n      const _this$state = this.state,\n            positionX = _this$state.positionX,\n            positionY = _this$state.positionY;\n      this.setState({\n        positionX: positionX + this.stepX,\n        positionY: positionY + this.stepY,\n        moving: true\n      });\n\n      if (this.stepX < 0) {\n        this.setState({\n          isHomerRunningLeft: true\n        });\n      } else if (this.stepX > 0) {\n        this.setState({\n          isHomerRunningLeft: false\n        });\n      } // if (this.state.isRunning)\n      // \tthis.timeOut = setTimeout(() => this.move(), 10);\n\n\n      if (this.state.isRunning === false) this.stopRunning();\n\n      if (positionX !== config.limits.leftLimit) {\n        this.setState({\n          donutPosition: this.state.donutPosition - this.stepX / config.background.defilement\n        });\n        this.setState({\n          obstaclePosition: this.state.obstaclePosition - this.stepX / config.background.defilement\n        });\n      }\n\n      this.setState({\n        relativePositionX: this.state.positionX - this.state.donutPosition\n      });\n    };\n\n    this.startRunning = () => {\n      this.setState({\n        isRunning: true\n      });\n      this.state.intervalHomer = setInterval(() => this.move(), 50);\n    };\n\n    this.stopRunning = () => {\n      this.setState({\n        isRunning: false\n      });\n      clearInterval(this.state.intervalHomer);\n    };\n\n    this.tick = () => {\n      let seconds = this.state.seconds;\n      this.setState({\n        seconds: seconds - 1\n      });\n\n      if (seconds === 0) {\n        this.setState({\n          seconds: 0\n        });\n        alert(\"GAME OVER\");\n        clearInterval(this.interval);\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.interval = setInterval(() => this.tick(), 1000);\n    };\n\n    this.pauseTimer = () => {\n      if (this.state.paused === false) {\n        clearInterval(this.interval);\n      } else {\n        this.componentDidMount();\n      }\n    };\n\n    this.pauseGame = () => {\n      this.setState({\n        paused: !this.state.paused\n      });\n      this.pauseTimer();\n    };\n\n    this.showModal = () => {\n      this.setState({\n        showModal: true\n      });\n    };\n\n    this.hideModal = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.collisionDetection = item => {\n      if (this.state.relativePositionX > item.positionDonutX - 30 && this.state.relativePositionX < item.positionDonutX + 30 && this.state.positionY < item.positionDonutY + 30 && this.state.positionY > item.positionDonutY - 30) item.picked = true;\n    };\n\n    this.collisionDetectionObstacle = item => {\n      if (this.state.relativePositionX > item.positionObstacleX - 30 && this.state.relativePositionX < item.positionObstacleX + 30 && this.state.positionY < item.positionObstacleY + 30 && this.state.positionY > item.positionObstacleY - 30) return true;\n    };\n\n    this.donutCount = () => {\n      let donutCount = 0;\n      this.state.donutPopped.map(item => item.picked ? donutCount = donutCount + 1 : donutCount = donutCount); //console.log(\"donutCount = \", donutCount);\n\n      return donutCount;\n    };\n\n    this.throwingDonut = () => {\n      this.setState({\n        donutCount: this.state.donutCount - 1,\n        catchDonut: false\n      });\n    };\n\n    this.gameLoop = () => {\n      this.state.donutPopped.map(item => this.collisionDetection(item));\n      this.state.obstaclePopped.map(item => this.collisionDetectionObstacle(item));\n      this.testLimitsOfMap();\n    };\n\n    this.state = {\n      positionX: config.initialPosition.x,\n      positionY: config.initialPosition.y,\n      positionObstacleY: getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit),\n      positionObstacleX: getRandomArbitrary(config.limits.leftLimit, config.limits.rightLimit),\n      showModal: false,\n      seconds: config.timer.seconds,\n      paused: false,\n      donutPosition: 0,\n      obstaclePosition: 0,\n      positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n      catchDonut: false,\n      donutCount: 0,\n      moving: false,\n      donutPopped: [{\n        positionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n        positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        picked: false\n      }, {\n        positionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n        positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        picked: false\n      }, {\n        positionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n        positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        picked: false\n      }, {\n        positionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n        positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        picked: false\n      }],\n      obstaclePopped: [{\n        positionObstacleX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n        positionObstacleY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        picked: false\n      }, {\n        positionObstacleX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n        positionObstacleY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        picked: false\n      }],\n      relativePositionX: config.initialPosition.x,\n      isRunning: false,\n      isHomerRunningLeft: false\n    };\n    this.stepX = 0;\n    this.stepY = 0;\n    this.tick = this.tick.bind(this);\n    this.interval = undefined;\n  }\n\n  render() {\n    const bgStyle = {\n      backgroundPositionY: config.background.position,\n      backgroundPositionX: -this.state.positionX / config.background.defilement,\n      height: config.background.height\n    };\n    {\n      this.gameLoop();\n    }\n    return React.createElement(\"div\", {\n      className: \"game\",\n      style: bgStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Donut, {\n      donutPopped: this.state.donutPopped,\n      donutPosition: this.state.donutPosition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(Obstacle, {\n      obstaclePopped: this.state.obstaclePopped,\n      obstaclePosition: this.state.obstaclePosition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(Homer, {\n      positionX: this.state.positionX,\n      positionY: this.state.positionY,\n      isRunning: this.state.isRunning,\n      isHomerRunningLeft: this.state.isHomerRunningLeft,\n      donut: this.state.catchDonut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), React.createElement(DonutCounter, {\n      donutCount: this.donutCount(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(JoyWrapper, {\n      setStep: this.setStep,\n      startRunning: this.startRunning,\n      stopRunning: this.stopRunning,\n      toTheRight: this.toTheRight,\n      toTheLeft: this.toTheLeft,\n      toTheTop: this.toTheTop,\n      toTheBottom: this.toTheBottom,\n      displayJoystick: this.state.paused,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), React.createElement(BoutonA, {\n      throwingDonut: this.throwingDonut,\n      displayButtonA: this.state.paused,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(Timer, {\n      pauseGame: this.pauseGame,\n      showModal: this.showModal,\n      seconds: this.state.seconds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      className: \"modal\",\n      pauseGame: this.pauseGame,\n      show: this.state.showModal,\n      hideModal: this.hideModal,\n      showModal: this.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/oliv/Documents/GIT_PROJET03/lyon-0919-react-p2-springfield-vice/springfield_vice/src/pages/Game.js"],"names":["React","Component","Homer","config","JoyWrapper","Timer","Donut","DonutCounter","BoutonA","Modal","getRandomArbitrary","Obstacle","Game","constructor","props","testLimitsOfMap","state","positionY","limits","topLimit","setState","bottomLimit","positionX","rightLimit","leftLimit","collisionDetectionObstacle","positionObstacleX","positionObstacleY","setStep","stepX","stepY","move","moving","isHomerRunningLeft","isRunning","stopRunning","donutPosition","background","defilement","obstaclePosition","relativePositionX","startRunning","intervalHomer","setInterval","clearInterval","tick","seconds","alert","interval","componentDidMount","pauseTimer","paused","pauseGame","showModal","hideModal","collisionDetection","item","positionDonutX","positionDonutY","picked","donutCount","donutPopped","map","throwingDonut","catchDonut","gameLoop","obstaclePopped","initialPosition","x","y","timer","parseInt","bind","undefined","render","bgStyle","backgroundPositionY","position","backgroundPositionX","height","toTheRight","toTheLeft","toTheTop","toTheBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Homer from \"../components/Homer\";\n//import ObstacleF from \"../components/ObstacleF\";\nimport config from \"../components/configSpringfieldVice.json\";\nimport JoyWrapper from \"../components/Joystick\";\nimport Timer from \"../components/Timer\";\nimport Donut from \"../components/Item\";\nimport DonutCounter from \"../components/DonutCounter\";\nimport BoutonA from \"../components/BoutonA\";\nimport \"./game.css\";\nimport Modal from \"../components/Modal\";\nimport { getRandomArbitrary } from \"../components/helpers\";\nimport Obstacle from \"../components/Obstacle\";\n\nclass Game extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpositionX: config.initialPosition.x,\n\t\t\tpositionY: config.initialPosition.y,\n\t\t\tpositionObstacleY: getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit),\n\t\t\tpositionObstacleX: getRandomArbitrary(config.limits.leftLimit, config.limits.rightLimit),\n\t\t\tshowModal: false,\n\t\t\tseconds: config.timer.seconds,\n\t\t\tpaused: false,\n\t\t\tdonutPosition: 0,\n\t\t\tobstaclePosition: 0,\n\t\t\tpositionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n\t\t\tcatchDonut: false,\n\t\t\tdonutCount: 0,\n\t\t\tmoving: false,\n\t\t\tdonutPopped: [\n\t\t\t\t{\n\t\t\t\t\tpositionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n\t\t\t\t\tpositionDonutY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tpicked: false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n\t\t\t\t\tpositionDonutY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tpicked: false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n\t\t\t\t\tpositionDonutY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tpicked: false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n\t\t\t\t\tpositionDonutY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tpicked: false\n\t\t\t\t}\n\t\t\t],\n\t\t\tobstaclePopped: [\n\t\t\t\t{\n\t\t\t\t\tpositionObstacleX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n\t\t\t\t\tpositionObstacleY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tpicked: false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionObstacleX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n\t\t\t\t\tpositionObstacleY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tpicked: false\n\t\t\t\t}\n\t\t\t],\n\t\t\trelativePositionX: config.initialPosition.x,\n\t\t\tisRunning: false,\n\t\t\tisHomerRunningLeft: false\n\t\t};\n\n\t\tthis.stepX = 0;\n\t\tthis.stepY = 0;\n\t\tthis.tick = this.tick.bind(this);\n\t\tthis.interval = undefined;\n\t}\n\n\ttestLimitsOfMap = () => {\n\t\tif (this.state.positionY < config.limits.topLimit) this.setState({ positionY: config.limits.topLimit });\n\t\telse if (this.state.positionY > config.limits.bottomLimit)\n\t\t\tthis.setState({ positionY: config.limits.bottomLimit });\n\t\telse if (this.state.positionX > config.limits.rightLimit)\n\t\t\tthis.setState({ positionX: config.limits.rightLimit });\n\t\telse if (this.state.positionX < config.limits.leftLimit)\n\t\t\tthis.setState({ positionX: config.limits.leftLimit });\n\t\tif (this.collisionDetectionObstacle())\n\t\t\tthis.setState({ positionX: this.state.positionObstacleX, positionY: this.state.positionObstacleY });\n\t};\n\n\tsetStep = (stepX, stepY) => {\n\t\tthis.stepX = stepX;\n\t\tthis.stepY = stepY;\n\t};\n\n\tmove = () => {\n\t\tconst { positionX, positionY } = this.state;\n\n\t\tthis.setState({\n\t\t\tpositionX: positionX + this.stepX,\n\t\t\tpositionY: positionY + this.stepY,\n\t\t\tmoving: true\n\t\t});\n\n\t\tif (this.stepX < 0) {\n\t\t\tthis.setState({ isHomerRunningLeft: true });\n\t\t} else if (this.stepX > 0) {\n\t\t\tthis.setState({ isHomerRunningLeft: false });\n\t\t}\n\t\t// if (this.state.isRunning)\n\t\t// \tthis.timeOut = setTimeout(() => this.move(), 10);\n\n\t\tif (this.state.isRunning === false) this.stopRunning();\n\n\t\tif (positionX !== config.limits.leftLimit) {\n\t\t\tthis.setState({ donutPosition: this.state.donutPosition - this.stepX / config.background.defilement });\n\t\t\tthis.setState({\n\t\t\t\tobstaclePosition: this.state.obstaclePosition - this.stepX / config.background.defilement\n\t\t\t});\n\t\t}\n\t\tthis.setState({ relativePositionX: this.state.positionX - this.state.donutPosition });\n\t};\n\n\tstartRunning = () => {\n\t\tthis.setState({ isRunning: true });\n\t\tthis.state.intervalHomer = setInterval(() => this.move(), 50);\n\t};\n\tstopRunning = () => {\n\t\tthis.setState({ isRunning: false });\n\t\tclearInterval(this.state.intervalHomer);\n\t};\n\n\ttick = () => {\n\t\tlet { seconds } = this.state;\n\t\tthis.setState({ seconds: seconds - 1 });\n\n\t\tif (seconds === 0) {\n\t\t\tthis.setState({ seconds: 0 });\n\t\t\talert(\"GAME OVER\");\n\t\t\tclearInterval(this.interval);\n\t\t}\n\t};\n\n\tcomponentDidMount = () => {\n\t\tthis.interval = setInterval(() => this.tick(), 1000);\n\t};\n\n\tpauseTimer = () => {\n\t\tif (this.state.paused === false) {\n\t\t\tclearInterval(this.interval);\n\t\t} else {\n\t\t\tthis.componentDidMount();\n\t\t}\n\t};\n\n\tpauseGame = () => {\n\t\tthis.setState({ paused: !this.state.paused });\n\t\tthis.pauseTimer();\n\t};\n\n\tshowModal = () => {\n\t\tthis.setState({ showModal: true });\n\t};\n\n\thideModal = () => {\n\t\tthis.setState({ showModal: false });\n\t};\n\n\tcollisionDetection = (item) => {\n\t\tif (\n\t\t\tthis.state.relativePositionX > item.positionDonutX - 30 &&\n\t\t\tthis.state.relativePositionX < item.positionDonutX + 30 &&\n\t\t\tthis.state.positionY < item.positionDonutY + 30 &&\n\t\t\tthis.state.positionY > item.positionDonutY - 30\n\t\t)\n\t\t\titem.picked = true;\n\t};\n\n\tcollisionDetectionObstacle = (item) => {\n\t\tif (\n\t\t\tthis.state.relativePositionX > item.positionObstacleX - 30 &&\n\t\t\tthis.state.relativePositionX < item.positionObstacleX + 30 &&\n\t\t\tthis.state.positionY < item.positionObstacleY + 30 &&\n\t\t\tthis.state.positionY > item.positionObstacleY - 30\n\t\t)\n\t\t\treturn true;\n\t};\n\n\tdonutCount = () => {\n\t\tlet donutCount = 0;\n\t\tthis.state.donutPopped.map((item) =>\n\t\t\titem.picked ? (donutCount = donutCount + 1) : (donutCount = donutCount)\n\t\t);\n\t\t//console.log(\"donutCount = \", donutCount);\n\t\treturn donutCount;\n\t};\n\n\tthrowingDonut = () => {\n\t\tthis.setState({ donutCount: this.state.donutCount - 1, catchDonut: false });\n\t};\n\tgameLoop = () => {\n\t\tthis.state.donutPopped.map((item) => this.collisionDetection(item));\n\t\tthis.state.obstaclePopped.map((item) => this.collisionDetectionObstacle(item));\n\t\tthis.testLimitsOfMap();\n\t};\n\trender() {\n\t\tconst bgStyle = {\n\t\t\tbackgroundPositionY: config.background.position,\n\t\t\tbackgroundPositionX: -this.state.positionX / config.background.defilement,\n\t\t\theight: config.background.height\n\t\t};\n\t\t{\n\t\t\tthis.gameLoop();\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"game\" style={bgStyle}>\n\t\t\t\t<Donut donutPopped={this.state.donutPopped} donutPosition={this.state.donutPosition} />\n\t\t\t\t<Obstacle\n\t\t\t\t\tobstaclePopped={this.state.obstaclePopped}\n\t\t\t\t\tobstaclePosition={this.state.obstaclePosition}\n\t\t\t\t/>\n\t\t\t\t<Homer\n\t\t\t\t\tpositionX={this.state.positionX}\n\t\t\t\t\tpositionY={this.state.positionY}\n\t\t\t\t\tisRunning={this.state.isRunning}\n\t\t\t\t\tisHomerRunningLeft={this.state.isHomerRunningLeft}\n\t\t\t\t\tdonut={this.state.catchDonut}\n\t\t\t\t/>\n\t\t\t\t<DonutCounter donutCount={this.donutCount()} />\n\t\t\t\t<JoyWrapper\n\t\t\t\t\tsetStep={this.setStep}\n\t\t\t\t\tstartRunning={this.startRunning}\n\t\t\t\t\tstopRunning={this.stopRunning}\n\t\t\t\t\ttoTheRight={this.toTheRight}\n\t\t\t\t\ttoTheLeft={this.toTheLeft}\n\t\t\t\t\ttoTheTop={this.toTheTop}\n\t\t\t\t\ttoTheBottom={this.toTheBottom}\n\t\t\t\t\tdisplayJoystick={this.state.paused}\n\t\t\t\t/>\n\t\t\t\t<BoutonA throwingDonut={this.throwingDonut} displayButtonA={this.state.paused} />\n\t\t\t\t<Timer pauseGame={this.pauseGame} showModal={this.showModal} seconds={this.state.seconds} />\n\t\t\t\t<Modal\n\t\t\t\t\tclassName=\"modal\"\n\t\t\t\t\tpauseGame={this.pauseGame}\n\t\t\t\t\tshow={this.state.showModal}\n\t\t\t\t\thideModal={this.hideModal}\n\t\t\t\t\tshowModal={this.showModal}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}