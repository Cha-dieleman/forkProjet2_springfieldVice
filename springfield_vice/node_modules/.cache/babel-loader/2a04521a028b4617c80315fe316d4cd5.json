{"ast":null,"code":"import _defineProperty from \"/Users/oliv/Documents/GIT_PROJET03/lyon-0919-react-p2-springfield-vice/springfield_vice/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/oliv/Documents/GIT_PROJET03/lyon-0919-react-p2-springfield-vice/springfield_vice/src/pages/Game.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport Homer from \"../components/Homer\"; //import ObstacleF from \"../components/ObstacleF\";\n\nimport config from \"../components/configSpringfieldVice.json\";\nimport JoyWrapper from \"../components/Joystick\";\nimport Timer from \"../components/Timer\";\nimport Donut from \"../components/Item\";\nimport DonutCounter from \"../components/DonutCounter\";\nimport BoutonA from \"../components/BoutonA\";\nimport \"./game.css\";\nimport Modal from \"../components/Modal\";\nimport MovingObs from \"../components/MovingObs\";\nimport { getRandomArbitrary } from \"../components/helpers\";\nimport Bart from \"../components/Bart\";\nconst donutStatus = {\n  GROUND: \"ground\",\n  PICKED: \"picked\",\n  THROWN: \"thrown\"\n};\nconst objDisplayBlock = \"block\";\nconst objDisplayNone = \"none\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.testLimitsOfMap = () => {\n      if (this.state.positionY < config.limits.topLimit) this.setState({\n        positionY: config.limits.topLimit\n      });else if (this.state.positionY > config.limits.bottomLimit) this.setState({\n        positionY: config.limits.bottomLimit\n      });else if (this.state.positionX > config.limits.rightLimit) this.setState({\n        positionX: config.limits.rightLimit\n      });else if (this.state.positionX < config.limits.leftLimit) this.setState({\n        positionX: config.limits.leftLimit\n      });\n    };\n\n    this.setStep = (stepX, stepY) => {\n      this.stepX = stepX;\n      this.stepY = stepY;\n    };\n\n    this.move = () => {\n      const _this$state = this.state,\n            positionX = _this$state.positionX,\n            positionY = _this$state.positionY,\n            positionMovingObsX = _this$state.positionMovingObsX;\n      this.setState({\n        positionX: positionX + this.stepX,\n        positionY: positionY + this.stepY,\n        moving: true\n      });\n      console.log(this.stepX, this.stepY);\n\n      if (this.stepX < 0) {\n        this.setState({\n          isHomerRunningLeft: true\n        });\n      } else if (this.stepX > 0) {\n        this.setState({\n          isHomerRunningLeft: false\n        });\n      } // if (this.state.isRunning)\n      // \tthis.timeOut = setTimeout(() => this.move(), 10);\n\n\n      if (this.state.isRunning === false) this.stopRunning();\n      if (positionX !== config.limits.leftLimit) this.setState({\n        donutPosition: this.state.donutPosition - this.stepX / config.background.defilement,\n        relativePositionX: this.state.positionX - this.state.donutPosition,\n        positionMovingObsX: positionMovingObsX - this.stepX / config.background.defilement\n      });\n    };\n\n    this.startRunning = () => {\n      this.setState({\n        isRunning: true\n      });\n      this.state.intervalHomer = setInterval(() => this.move(), 50);\n    };\n\n    this.stopRunning = () => {\n      this.setState({\n        isRunning: false\n      });\n      clearInterval(this.state.intervalHomer);\n    };\n\n    this.moveObs = () => {\n      let i = 0;\n      setInterval(() => {\n        let newPosX = this.state.opponentPos.movX[i];\n        let newPosY = this.state.opponentPos.movY[i];\n        this.setState({\n          opponentPos: _objectSpread({}, this.state.opponentPos, {\n            positionMovingObsX: newPosX,\n            positionMovingObsY: newPosY\n          })\n        });\n        i++;\n\n        if (i >= this.state.opponentPos.movX.length) {\n          i = 0;\n        }\n      }, 1000);\n    };\n\n    this.moveBart = () => {\n      let i = 0;\n      setInterval(() => {\n        let newPosX = this.state.bartPos.BartMovX[i];\n        let newPosY = this.state.bartPos.BartMovY[i];\n        this.setState({\n          bartPos: _objectSpread({}, this.state.bartPos, {\n            positionBartX: newPosX,\n            positionBartY: newPosY\n          })\n        });\n        i++;\n\n        if (i >= this.state.bartPos.BartMovX.length) {\n          i = 0;\n        }\n      }, 1000);\n    };\n\n    this.tick = () => {\n      let seconds = this.state.seconds;\n      this.setState({\n        seconds: seconds - 1\n      });\n\n      if (seconds === 0) {\n        this.setState({\n          seconds: 0\n        });\n        alert(\"GAME OVER\");\n        clearInterval(this.interval);\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.interval = setInterval(() => this.tick(), 1000);\n      this.moveObs();\n      this.moveBart();\n    };\n\n    this.pauseTimer = () => {\n      if (this.state.paused === false) {\n        clearInterval(this.interval);\n      } else {\n        this.componentDidMount();\n      }\n    };\n\n    this.pauseGame = () => {\n      this.setState({\n        paused: !this.state.paused\n      });\n      this.pauseTimer();\n    };\n\n    this.collisionDetection = item => {\n      if (this.state.relativePositionX > item.positionDonutX - 30 && this.state.relativePositionX < item.positionDonutX + 30 && this.state.positionY < item.positionDonutY + 30 && this.state.positionY > item.positionDonutY - 30 && item.status === \"ground\") item.status = \"picked\";\n    };\n\n    this.donutCount = () => {\n      let donutCount = 0; // this.state.donutPopped.map((item) => {\n      // \tif (item.status === \"picked\" && item.display === true) {\n      // \t\treturn donutCount = donutCount + 1\n      // \t\t}\n      // \tif (item.status === \"picked\" && item.display === false) {\n      // \t\treturn donutCount = donutCount\n      // \t\t}\n      // \t}\n      // );\n\n      this.state.donutPopped.map(item => item.status === \"picked\" ? donutCount = donutCount + 1 : donutCount = donutCount);\n      return donutCount;\n    };\n\n    this.throwingDonut = () => {\n      this.setState({\n        isThrowing: true // donutPopped: {...this.state.donutPopped, picked: false}\n\n      });\n      let donutIndex = this.state.donutPopped.findIndex(item => item.status === \"picked\");\n      console.log(donutIndex);\n      if (donutIndex < 0) donutIndex = 0;\n      const donutPopped = this.state.donutPopped;\n      donutPopped[donutIndex].status = donutStatus.THROWN; // donutPopped[donutIndex].display = false;\n\n      this.setState({\n        donutPopped\n      }); // console.log(\"throw\")\n    };\n\n    this.stopThrowingDonut = () => {\n      this.setState({\n        isThrowing: false,\n        displayDonut: false\n      }); // console.log(\"stopthrow\")\n    };\n\n    this.gameLoop = () => {\n      this.state.donutPopped.map(item => this.collisionDetection(item));\n      this.testLimitsOfMap();\n    };\n\n    this.state = {\n      positionX: config.initialPosition.x,\n      positionY: config.initialPosition.y,\n      positionObstacleY: getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit),\n      positionObstacleX: getRandomArbitrary(config.limits.leftLimit, config.limits.rightLimit),\n      seconds: config.timer.seconds,\n      paused: false,\n      donutPosition: 0,\n      positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n      catchDonut: false,\n      moving: false,\n      isThrowing: false,\n      donutPopped: [{\n        positionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n        positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        picked: false,\n        status: donutStatus.GROUND,\n        display: true\n      }, {\n        positionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n        positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        picked: false,\n        status: donutStatus.GROUND,\n        display: true\n      }, {\n        positionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n        positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        picked: false,\n        status: donutStatus.GROUND,\n        display: true\n      }, {\n        positionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n        positionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n        picked: false,\n        status: donutStatus.GROUND,\n        display: true\n      }],\n      relativePositionX: config.initialPosition.x,\n      isRunning: false,\n      isHomerRunningLeft: false,\n      opponentPos: {\n        positionMovingObsX: 300,\n        positionMovingObsY: 200,\n        movX: [350, 350, 400, 400, 500, 500, 550, 550, 600, 600, 550, 550, 500, 500, 450, 450, 400, 400],\n        movY: [250, 250, 250, 250, 300, 300, 300, 300, 250, 250, 300, 300, 250, 250, 200, 200, 230, 230]\n      },\n      // {\n      // positionMovingObsX: 850,\n      // positionMovingObsY: 400,\n      // movX: [800, 800, 750, 750, 700, 700, 650, 650, 650, 650, 700, 700, 700, 700, 750, 750],\n      // movY: [350, 350, 400, 400, 350, 350, 350, 350, 300, 300, 250, 250, 200, 200, 300, 300],\n      // },\n      bartPos: {\n        positionBartX: 6000,\n        positionBartY: 200,\n        BartMovX: [6000, 6000, 6000, 6020, 6020, 6050, 6050, 6100, 6100, 6150, 6150, 6200, 6250, 6250, 6300, 6300, 6250, 6250, 6200, 6200, 6100, 6050],\n        BartMovY: [200, 250, 250, 250, 300, 300, 300, 300, 250, 250, 300, 300, 250, 250, 200, 200, 230, 230, 200, 200, 180, 180]\n      },\n      globalPosition: 0\n    };\n    this.stepX = 0;\n    this.stepY = 0;\n    this.tick = this.tick.bind(this);\n    this.interval = undefined;\n  }\n\n  render() {\n    // Modal\n    let params = new URLSearchParams(this.props.location.search);\n    const bgStyle = {\n      backgroundPositionY: config.background.position,\n      backgroundPositionX: -this.state.positionX / config.background.defilement,\n      height: config.background.height\n    };\n    {\n      this.gameLoop();\n    }\n    return React.createElement(\"div\", {\n      className: \"game\",\n      style: bgStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Donut, {\n      donutPopped: this.state.donutPopped,\n      donutPosition: this.state.donutPosition,\n      objDisplayBlock: objDisplayBlock,\n      objDisplayNone: objDisplayNone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }), React.createElement(MovingObs, {\n      positionMovingObsX: this.state.opponentPos.positionMovingObsX,\n      positionMovingObsY: this.state.opponentPos.positionMovingObsY,\n      opponentPos: this.state.opponentPos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }), React.createElement(Bart, {\n      positionBartX: this.state.bartPos.positionBartX,\n      positionBartY: this.state.bartPos.positionBartY,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), React.createElement(Homer, {\n      positionX: this.state.positionX,\n      positionY: this.state.positionY,\n      isRunning: this.state.isRunning,\n      isHomerRunningLeft: this.state.isHomerRunningLeft,\n      donutCount: this.donutCount(),\n      isThrowing: this.state.isThrowing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }), React.createElement(DonutCounter, {\n      donutCount: this.donutCount(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }), React.createElement(JoyWrapper, {\n      setStep: this.setStep,\n      startRunning: this.startRunning,\n      stopRunning: this.stopRunning,\n      toTheRight: this.toTheRight,\n      toTheLeft: this.toTheLeft,\n      toTheTop: this.toTheTop,\n      toTheBottom: this.toTheBottom,\n      displayJoystick: this.state.paused,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }), React.createElement(BoutonA, {\n      throwingDonut: this.throwingDonut,\n      stopThrowingDonut: this.stopThrowingDonut,\n      displayButtonA: this.state.paused,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }), React.createElement(Timer, {\n      pauseGame: this.pauseGame,\n      seconds: this.state.seconds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }), params.get(\"modal\") && React.createElement(Modal, {\n      modal: this.props.location.search,\n      origin: null,\n      resume: () => this.pauseGame(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/oliv/Documents/GIT_PROJET03/lyon-0919-react-p2-springfield-vice/springfield_vice/src/pages/Game.js"],"names":["React","Component","Homer","config","JoyWrapper","Timer","Donut","DonutCounter","BoutonA","Modal","MovingObs","getRandomArbitrary","Bart","donutStatus","GROUND","PICKED","THROWN","objDisplayBlock","objDisplayNone","Game","constructor","props","testLimitsOfMap","state","positionY","limits","topLimit","setState","bottomLimit","positionX","rightLimit","leftLimit","setStep","stepX","stepY","move","positionMovingObsX","moving","console","log","isHomerRunningLeft","isRunning","stopRunning","donutPosition","background","defilement","relativePositionX","startRunning","intervalHomer","setInterval","clearInterval","moveObs","i","newPosX","opponentPos","movX","newPosY","movY","positionMovingObsY","length","moveBart","bartPos","BartMovX","BartMovY","positionBartX","positionBartY","tick","seconds","alert","interval","componentDidMount","pauseTimer","paused","pauseGame","collisionDetection","item","positionDonutX","positionDonutY","status","donutCount","donutPopped","map","throwingDonut","isThrowing","donutIndex","findIndex","stopThrowingDonut","displayDonut","gameLoop","initialPosition","x","y","positionObstacleY","positionObstacleX","timer","parseInt","catchDonut","picked","display","globalPosition","bind","undefined","render","params","URLSearchParams","location","search","bgStyle","backgroundPositionY","position","backgroundPositionX","height","toTheRight","toTheLeft","toTheTop","toTheBottom","get"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Homer from \"../components/Homer\";\n//import ObstacleF from \"../components/ObstacleF\";\nimport config from \"../components/configSpringfieldVice.json\";\nimport JoyWrapper from \"../components/Joystick\";\nimport Timer from \"../components/Timer\";\nimport Donut from \"../components/Item\";\nimport DonutCounter from \"../components/DonutCounter\";\nimport BoutonA from \"../components/BoutonA\";\nimport \"./game.css\";\nimport Modal from \"../components/Modal\";\nimport MovingObs from \"../components/MovingObs\";\nimport { getRandomArbitrary } from \"../components/helpers\";\nimport Bart from \"../components/Bart\";\n\nconst donutStatus = {\n\tGROUND : \"ground\",\n\tPICKED: \"picked\",\n\tTHROWN: \"thrown\",\n}\n\nconst objDisplayBlock = \"block\";\nconst objDisplayNone = \"none\";\n\nclass Game extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpositionX: config.initialPosition.x,\n\t\t\tpositionY: config.initialPosition.y,\n\t\t\tpositionObstacleY: getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit),\n\t\t\tpositionObstacleX: getRandomArbitrary(config.limits.leftLimit, config.limits.rightLimit),\n\t\t\tseconds: config.timer.seconds,\n\t\t\tpaused: false,\n\t\t\tdonutPosition: 0,\n\t\t\tpositionDonutY: parseInt(getRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)),\n\t\t\tcatchDonut: false,\n\t\t\tmoving: false,\n\t\t\tisThrowing: false,\n\t\t\tdonutPopped: [\n\t\t\t\t{\n\t\t\t\t\tpositionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n\t\t\t\t\tpositionDonutY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tpicked: false,\n\t\t\t\t\tstatus: donutStatus.GROUND,\n\t\t\t\t\tdisplay: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n\t\t\t\t\tpositionDonutY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tpicked: false,\n\t\t\t\t\tstatus: donutStatus.GROUND,\n\t\t\t\t\tdisplay: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n\t\t\t\t\tpositionDonutY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tpicked: false,\n\t\t\t\t\tstatus: donutStatus.GROUND,\n\t\t\t\t\tdisplay: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositionDonutX: parseInt(getRandomArbitrary(config.limits.leftLimit, 1000)),\n\t\t\t\t\tpositionDonutY: parseInt(\n\t\t\t\t\t\tgetRandomArbitrary(config.limits.topLimit, config.limits.bottomLimit)\n\t\t\t\t\t),\n\t\t\t\t\tpicked: false,\n\t\t\t\t\tstatus: donutStatus.GROUND,\n\t\t\t\t\tdisplay: true,\n\t\t\t\t}\n\t\t\t],\n\t\t\trelativePositionX: config.initialPosition.x,\n\t\t\tisRunning: false,\n\t\t\tisHomerRunningLeft: false,\n\t\t\topponentPos:\n\t\t\t\t{\n\t\t\t\tpositionMovingObsX: 300,\n\t\t\t\tpositionMovingObsY: 200,\n\t\t\t\tmovX: [350, 350, 400, 400, 500, 500, 550, 550, 600, 600, 550, 550, 500, 500, 450, 450, 400, 400],\n\t\t\t\tmovY: [250, 250, 250, 250, 300, 300, 300, 300, 250, 250, 300, 300, 250, 250, 200, 200, 230, 230],\n\t\t\t\t},\n\t\t\t\t// {\n\t\t\t\t// positionMovingObsX: 850,\n\t\t\t\t// positionMovingObsY: 400,\n\t\t\t\t// movX: [800, 800, 750, 750, 700, 700, 650, 650, 650, 650, 700, 700, 700, 700, 750, 750],\n\t\t\t\t// movY: [350, 350, 400, 400, 350, 350, 350, 350, 300, 300, 250, 250, 200, 200, 300, 300],\n\t\t\t\t// },\n\t\t\tbartPos:\n\t\t\t\t{\n\t\t\t\tpositionBartX: 6000,\n\t\t\t\tpositionBartY: 200,\n\t\t\t\tBartMovX: [6000, 6000, 6000, 6020, 6020, 6050, 6050, 6100, 6100, 6150, 6150, 6200, 6250, 6250, 6300, 6300, 6250, 6250, 6200, 6200, 6100, 6050],\n\t\t\t\tBartMovY: [200, 250, 250, 250, 300, 300, 300, 300, 250, 250, 300, 300, 250, 250, 200, 200, 230, 230, 200, 200, 180, 180],\n\t\t\t\t},\n\t\t\tglobalPosition: 0,\n\t\t};\n\n\t\tthis.stepX = 0;\n\t\tthis.stepY = 0;\n\t\tthis.tick = this.tick.bind(this);\n\t\tthis.interval = undefined;\n\t}\n\n\ttestLimitsOfMap = () => {\n\t\tif (this.state.positionY < config.limits.topLimit) this.setState({ positionY: config.limits.topLimit });\n\t\telse if (this.state.positionY > config.limits.bottomLimit)\n\t\t\tthis.setState({ positionY: config.limits.bottomLimit });\n\t\telse if (this.state.positionX > config.limits.rightLimit)\n\t\t\tthis.setState({ positionX: config.limits.rightLimit });\n\t\telse if (this.state.positionX < config.limits.leftLimit)\n\t\t\tthis.setState({ positionX: config.limits.leftLimit });\n\t};\n\n\tsetStep = (stepX, stepY) => {\n\t\tthis.stepX = stepX;\n\t\tthis.stepY = stepY;\n\t};\n\n\tmove = () => {\n\t\tconst { positionX, positionY, positionMovingObsX } = this.state;\n\n\t\tthis.setState({\n\t\t\tpositionX: positionX + this.stepX,\n\t\t\tpositionY: positionY + this.stepY,\n\t\t\tmoving: true\n\t\t});\n\t\tconsole.log(this.stepX, this.stepY);\n\n\t\tif (this.stepX < 0) {\n\t\t\tthis.setState({ isHomerRunningLeft: true });\n\t\t} else if (this.stepX > 0) {\n\t\t\tthis.setState({ isHomerRunningLeft: false });\n\t\t}\n\t\t// if (this.state.isRunning)\n\t\t// \tthis.timeOut = setTimeout(() => this.move(), 10);\n\t\n\t\tif (this.state.isRunning === false)\n\t\t\tthis.stopRunning();\n\t\t\n\n\n\t\tif (positionX !== config.limits.leftLimit)\n\t\t\tthis.setState({\n\t\t\t\tdonutPosition: this.state.donutPosition - this.stepX / config.background.defilement,\n\t\t\t\trelativePositionX: this.state.positionX - this.state.donutPosition,\n\t\t\t\tpositionMovingObsX: positionMovingObsX - this.stepX / config.background.defilement\n\t\t\t});\n\n\t\t\n\t};\n\n\tstartRunning = () => {\n\t\tthis.setState({ isRunning: true });\n\t\tthis.state.intervalHomer = setInterval(() => this.move(), 50);\n\t};\n\tstopRunning = () => {\n\t\tthis.setState({ isRunning: false });\n\t\tclearInterval(this.state.intervalHomer);\n\t}\n\n\tmoveObs = () => {\n\t\tlet i=0;\n\t\tsetInterval(() => {\n\t\t\tlet newPosX = this.state.opponentPos.movX[i];\n\t\t\tlet newPosY = this.state.opponentPos.movY[i];\n\t\t\tthis.setState({ opponentPos: { ...this.state.opponentPos, positionMovingObsX: newPosX, positionMovingObsY: newPosY} });\n\t\t\ti++;\n\t\t\tif(i>=this.state.opponentPos.movX.length){\n\t\t\t\ti = 0;\n\t\t\t}\n\t\t}, 1000);\n\t};\n\n\tmoveBart = () => {\n\t\tlet i=0;\n\t\tsetInterval(() => {\n\t\t\tlet newPosX = this.state.bartPos.BartMovX[i];\n\t\t\tlet newPosY = this.state.bartPos.BartMovY[i];\n\t\t\tthis.setState({ bartPos: { ...this.state.bartPos, positionBartX: newPosX, positionBartY: newPosY} });\n\t\t\ti++;\n\t\t\tif(i>=this.state.bartPos.BartMovX.length){\n\t\t\t\ti = 0;\n\t\t\t}\n\t\t}, 1000);\n\t}\n\n\ttick = () => {\n\t\tlet { seconds } = this.state;\n\t\tthis.setState({ seconds: seconds - 1 }); \n\n\t\tif (seconds === 0) {\n\t\t\tthis.setState({ seconds: 0 });\n\t\t\talert(\"GAME OVER\");\n\t\t\tclearInterval(this.interval);\n\t\t}\n\t};\n\n\tcomponentDidMount = () => {\n\t\tthis.interval = setInterval(() => this.tick(), 1000);\n\t\tthis.moveObs();\n\t\tthis.moveBart();\n\t};\n\n\tpauseTimer = () => {\n\t\tif (this.state.paused === false) {\n\t\t\tclearInterval(this.interval);\n\t\t} else {\n\t\t\tthis.componentDidMount();\n\t\t}\n\t};\n\n\tpauseGame = () => {\n\t\tthis.setState({ paused: !this.state.paused });\n\t\tthis.pauseTimer();\n\t};\n\n\tcollisionDetection = (item) => {\n\t\tif (\n\t\t\tthis.state.relativePositionX > item.positionDonutX - 30 &&\n\t\t\tthis.state.relativePositionX < item.positionDonutX + 30 &&\n\t\t\tthis.state.positionY < item.positionDonutY + 30 &&\n\t\t\tthis.state.positionY > item.positionDonutY - 30 && item.status === \"ground\"\n\t\t)\n\t\t\titem.status = \"picked\";\n\t\t\t\n\t};\n\n\tdonutCount = () => {\n\t\tlet donutCount = 0;\n\t\t// this.state.donutPopped.map((item) => {\n\t\t// \tif (item.status === \"picked\" && item.display === true) {\n\t\t// \t\treturn donutCount = donutCount + 1\n\t\t// \t\t}\n\t\t// \tif (item.status === \"picked\" && item.display === false) {\n\t\t// \t\treturn donutCount = donutCount\n\t\t// \t\t}\n\t\t// \t}\n\t\t// );\n\t\tthis.state.donutPopped.map((item) => item.status === \"picked\" ? (donutCount = donutCount + 1) : (donutCount = donutCount));\n\n\t\treturn donutCount;\n\t};\n\n\n\tthrowingDonut = () => {\n\t\tthis.setState({\n\t\t\tisThrowing: true,\n\t\t\t// donutPopped: {...this.state.donutPopped, picked: false}\n\t\t});\n\t\tlet donutIndex = this.state.donutPopped.findIndex((item) => item.status === \"picked\")\n\t\tconsole.log(donutIndex)\n\t\tif (donutIndex < 0) donutIndex = 0;\n\t\tconst { donutPopped } = this.state;\n\t\tdonutPopped[donutIndex].status = donutStatus.THROWN;\n\t\t// donutPopped[donutIndex].display = false;\n\t\tthis.setState({ donutPopped })\n\t\t// console.log(\"throw\")\n\t};\n\n\tstopThrowingDonut = () => {\n\t\tthis.setState({ isThrowing: false, displayDonut: false });\n\t\t// console.log(\"stopthrow\")\n\t};\n\n\tgameLoop = () => {\n\t\tthis.state.donutPopped.map((item) => this.collisionDetection(item));\n\t\tthis.testLimitsOfMap();\n\t};\n\n\n\trender() {\n\n\t\t// Modal\n\t\tlet params = new URLSearchParams(this.props.location.search);\n\n\t\tconst bgStyle = {\n\t\t\tbackgroundPositionY: config.background.position,\n\t\t\tbackgroundPositionX: -this.state.positionX / config.background.defilement,\n\t\t\theight: config.background.height\n\t\t};\n\t\t{\n\t\t\tthis.gameLoop();\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"game\" style={bgStyle}>\n\t\t\t\t<Donut donutPopped={this.state.donutPopped} donutPosition={this.state.donutPosition} objDisplayBlock={objDisplayBlock} objDisplayNone={objDisplayNone}/>\n\n\t\t\t\t<MovingObs\n\t\t\t\t\tpositionMovingObsX={this.state.opponentPos.positionMovingObsX}\n\t\t\t\t\tpositionMovingObsY={this.state.opponentPos.positionMovingObsY}\n\t\t\t\t\topponentPos={this.state.opponentPos}\n\t\t\t\t/>\n\t\t\t\t<Bart \n\t\t\t\t\tpositionBartX={this.state.bartPos.positionBartX}\n\t\t\t\t\tpositionBartY={this.state.bartPos.positionBartY}\n\t\t\t\t/>\n\t\t\t\t<Homer\n\t\t\t\t\tpositionX={this.state.positionX}\n\t\t\t\t\tpositionY={this.state.positionY}\n\t\t\t\t\tisRunning={this.state.isRunning}\n\t\t\t\t\tisHomerRunningLeft={this.state.isHomerRunningLeft}\n\t\t\t\t\tdonutCount={this.donutCount()}\n\t\t\t\t\tisThrowing={this.state.isThrowing}\n\t\t\t\t/>\n\n\t\t\t\t<DonutCounter donutCount={this.donutCount()} />\n\n\t\t\t\t<JoyWrapper\n\t\t\t\t\tsetStep={this.setStep}\n\t\t\t\t\tstartRunning={this.startRunning}\n\t\t\t\t\tstopRunning={this.stopRunning}\n\t\t\t\t\ttoTheRight={this.toTheRight}\n\t\t\t\t\ttoTheLeft={this.toTheLeft}\n\t\t\t\t\ttoTheTop={this.toTheTop}\n\t\t\t\t\ttoTheBottom={this.toTheBottom}\n\t\t\t\t\tdisplayJoystick={this.state.paused}\n\t\t\t\t/>\n\n\t\t\t\t<BoutonA throwingDonut={this.throwingDonut} stopThrowingDonut={this.stopThrowingDonut} displayButtonA={this.state.paused} />\n\n\t\t\t\t<Timer pauseGame={this.pauseGame} seconds={this.state.seconds} />\n\n\t\t\t\t{params.get(\"modal\") && (\n        <Modal\n          modal={this.props.location.search}\n\t\t\t\t\torigin={null}\n\t\t\t\t\tresume={() => this.pauseGame()}\n        />\n      )}\n\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Game;"]},"metadata":{},"sourceType":"module"}